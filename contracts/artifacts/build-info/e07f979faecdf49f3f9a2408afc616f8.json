{
	"id": "e07f979faecdf49f3f9a2408afc616f8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EelswapERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interfaces/IEelswapERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract EelswapERC20 is IEelswapERC20{\r\n    using SafeMath for uint;\r\n\r\n    string public override constant name = 'Eelswap V2';\r\n    string public override constant symbol = 'EEL-V2';\r\n    uint8 public override constant decimals = 18;\r\n    uint public override totalSupply;\r\n\r\n    mapping(address => uint) public override balanceOf;\r\n    mapping(address => mapping(address => uint))public override allowance;\r\n\r\n    // event Approval(address indexed owner, address indexed spender, uint value);\r\n    // event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(address(from), address(0), value);\r\n    }   \r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external override returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external override returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external override returns (bool) {\r\n        // uint(-1) converts the value to the max uint value\r\n        if (allowance[from][msg.sender] != type(uint256).max) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IEelswapERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns(string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E DUP16 0xD0 0xAE PUSH10 0x79A6E3ADA69687701075 SWAP8 0x25 REVERT 0xBC DUP4 KECCAK256 DUP3 SWAP10 STOP 0xF7 PUSH10 0x47661CB990B664736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e8fd0ae6979a6e3ada696877010759725fdbc8320829900f76947661cb990b664736f6c63430008000033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EelswapERC20.sol": {
				"EelswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EelswapERC20.sol\":163:2292  contract EelswapERC20 is IEelswapERC20{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EelswapERC20.sol\":163:2292  contract EelswapERC20 is IEelswapERC20{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/EelswapERC20.sol\":240:291  string public override constant name = 'Eelswap V2' */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1588:1744  function approve(address spender, uint value) external override returns (bool) {\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":405:437  uint public override totalSupply */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1908:2289  function transferFrom(address from, address to, uint value) external override returns (bool) {\r... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":354:398  uint8 public override constant decimals = 18 */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":446:496  mapping(address => uint) public override balanceOf */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":298:347  string public override constant symbol = 'EEL-V2' */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1752:1900  function transfer(address to, uint value) external override returns (bool) {\r... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":503:572  mapping(address => mapping(address => uint))public override allowance */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":240:291  string public override constant name = 'Eelswap V2' */\n    tag_14:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x45656c7377617020563200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1588:1744  function approve(address spender, uint value) external override returns (bool) {\r... */\n    tag_20:\n        /* \"contracts/EelswapERC20.sol\":1661:1665  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1678:1714  _approve(msg.sender, spender, value) */\n      tag_54\n        /* \"contracts/EelswapERC20.sol\":1687:1697  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":1699:1706  spender */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1708:1713  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1678:1686  _approve */\n      tag_55\n        /* \"contracts/EelswapERC20.sol\":1678:1714  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/EelswapERC20.sol\":1732:1736  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1725:1736  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1588:1744  function approve(address spender, uint value) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":405:437  uint public override totalSupply */\n    tag_24:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1908:2289  function transferFrom(address from, address to, uint value) external override returns (bool) {\r... */\n    tag_30:\n        /* \"contracts/EelswapERC20.sol\":1995:1999  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2109:2126  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/EelswapERC20.sol\":2078:2087  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":2078:2093  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2088:2092  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":2078:2093  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2078:2105  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2094:2104  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":2078:2105  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":2078:2126  allowance[from][msg.sender] != type(uint256).max */\n      eq\n        /* \"contracts/EelswapERC20.sol\":2074:2223  if (allowance[from][msg.sender] != type(uint256).max) {\r... */\n      tag_57\n      jumpi\n        /* \"contracts/EelswapERC20.sol\":2173:2211  allowance[from][msg.sender].sub(value) */\n      tag_58\n        /* \"contracts/EelswapERC20.sol\":2205:2210  value */\n      dup3\n        /* \"contracts/EelswapERC20.sol\":2173:2182  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":2173:2188  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2183:2187  from */\n      dup8\n        /* \"contracts/EelswapERC20.sol\":2173:2188  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2173:2200  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2189:2199  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":2173:2200  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":2173:2204  allowance[from][msg.sender].sub */\n      tag_59\n      swap1\n        /* \"contracts/EelswapERC20.sol\":2173:2211  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/EelswapERC20.sol\":2143:2152  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":2143:2158  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2153:2157  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":2143:2158  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2143:2170  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2159:2169  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":2143:2170  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2143:2211  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":2074:2223  if (allowance[from][msg.sender] != type(uint256).max) {\r... */\n    tag_57:\n        /* \"contracts/EelswapERC20.sol\":2233:2259  _transfer(from, to, value) */\n      tag_60\n        /* \"contracts/EelswapERC20.sol\":2243:2247  from */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2249:2251  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2253:2258  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2233:2242  _transfer */\n      tag_61\n        /* \"contracts/EelswapERC20.sol\":2233:2259  _transfer(from, to, value) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/EelswapERC20.sol\":2277:2281  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":2270:2281  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1908:2289  function transferFrom(address from, address to, uint value) external override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":354:398  uint8 public override constant decimals = 18 */\n    tag_33:\n        /* \"contracts/EelswapERC20.sol\":396:398  18 */\n      0x12\n        /* \"contracts/EelswapERC20.sol\":354:398  uint8 public override constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":446:496  mapping(address => uint) public override balanceOf */\n    tag_39:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":298:347  string public override constant symbol = 'EEL-V2' */\n    tag_42:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x45454c2d56320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1752:1900  function transfer(address to, uint value) external override returns (bool) {\r... */\n    tag_46:\n        /* \"contracts/EelswapERC20.sol\":1821:1825  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1838:1870  _transfer(msg.sender, to, value) */\n      tag_63\n        /* \"contracts/EelswapERC20.sol\":1848:1858  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":1860:1862  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1864:1869  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1838:1847  _transfer */\n      tag_61\n        /* \"contracts/EelswapERC20.sol\":1838:1870  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/EelswapERC20.sol\":1888:1892  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1881:1892  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1752:1900  function transfer(address to, uint value) external override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":503:572  mapping(address => mapping(address => uint))public override allowance */\n    tag_51:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1183:1352  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_55:\n        /* \"contracts/EelswapERC20.sol\":1292:1297  value */\n      dup1\n        /* \"contracts/EelswapERC20.sol\":1264:1273  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":1264:1280  allowance[owner] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1274:1279  owner */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1264:1280  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1264:1289  allowance[owner][spender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1281:1288  spender */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1264:1289  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1264:1297  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1329:1336  spender */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1313:1344  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapERC20.sol\":1322:1327  owner */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1313:1344  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/EelswapERC20.sol\":1338:1343  value */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1313:1344  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EelswapERC20.sol\":1183:1352  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1360:1580  function _transfer(address from, address to, uint value) private {\r... */\n    tag_61:\n        /* \"contracts/EelswapERC20.sol\":1454:1480  balanceOf[from].sub(value) */\n      tag_70\n        /* \"contracts/EelswapERC20.sol\":1474:1479  value */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1454:1463  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1454:1469  balanceOf[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1464:1468  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":1454:1469  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":1454:1473  balanceOf[from].sub */\n      tag_59\n      swap1\n        /* \"contracts/EelswapERC20.sol\":1454:1480  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/EelswapERC20.sol\":1436:1445  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1436:1451  balanceOf[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1446:1450  from */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1436:1451  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1436:1480  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1507:1531  balanceOf[to].add(value) */\n      tag_71\n        /* \"contracts/EelswapERC20.sol\":1525:1530  value */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1507:1516  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1507:1520  balanceOf[to] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1517:1519  to */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1507:1520  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":1507:1524  balanceOf[to].add */\n      tag_72\n      swap1\n        /* \"contracts/EelswapERC20.sol\":1507:1531  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/EelswapERC20.sol\":1491:1500  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1491:1504  balanceOf[to] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1501:1503  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1491:1504  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1491:1531  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1562:1564  to */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1547:1572  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapERC20.sol\":1556:1560  from */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1547:1572  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/EelswapERC20.sol\":1566:1571  value */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1547:1572  Transfer(from, to, value) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EelswapERC20.sol\":1360:1580  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_78:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_80\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_84\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_87:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_88\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_78\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_50:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_90:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_91\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_78\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_92\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_78\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_29:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_94:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_95\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_78\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_96\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_78\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_97\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_82\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_19:\n      0x00\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_99:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_100\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_78\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_101\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_82\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_102:\n        /* \"#utility.yul\":2030:2051   */\n      tag_104\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_106:\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_108\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2235:2306   */\n      tag_110\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_112\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2392:2421   */\n      tag_114\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2552   */\n    tag_116:\n        /* \"#utility.yul\":2521:2545   */\n      tag_118\n        /* \"#utility.yul\":2539:2544   */\n      dup2\n        /* \"#utility.yul\":2521:2545   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2516:2519   */\n      dup3\n        /* \"#utility.yul\":2509:2546   */\n      mstore\n        /* \"#utility.yul\":2499:2552   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2558:2670   */\n    tag_120:\n        /* \"#utility.yul\":2641:2663   */\n      tag_122\n        /* \"#utility.yul\":2657:2662   */\n      dup2\n        /* \"#utility.yul\":2641:2663   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2636:2639   */\n      dup3\n        /* \"#utility.yul\":2629:2664   */\n      mstore\n        /* \"#utility.yul\":2619:2670   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:2886   */\n    tag_22:\n      0x00\n        /* \"#utility.yul\":2801:2803   */\n      0x20\n        /* \"#utility.yul\":2790:2799   */\n      dup3\n        /* \"#utility.yul\":2786:2804   */\n      add\n        /* \"#utility.yul\":2778:2804   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2879   */\n      tag_125\n        /* \"#utility.yul\":2876:2877   */\n      0x00\n        /* \"#utility.yul\":2865:2874   */\n      dup4\n        /* \"#utility.yul\":2861:2878   */\n      add\n        /* \"#utility.yul\":2852:2858   */\n      dup5\n        /* \"#utility.yul\":2814:2879   */\n      tag_102\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2768:2886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2892:3205   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"#utility.yul\":3032:3041   */\n      dup3\n        /* \"#utility.yul\":3028:3046   */\n      add\n        /* \"#utility.yul\":3020:3046   */\n      swap1\n      pop\n        /* \"#utility.yul\":3092:3101   */\n      dup2\n        /* \"#utility.yul\":3086:3090   */\n      dup2\n        /* \"#utility.yul\":3082:3102   */\n      sub\n        /* \"#utility.yul\":3078:3079   */\n      0x00\n        /* \"#utility.yul\":3067:3076   */\n      dup4\n        /* \"#utility.yul\":3063:3080   */\n      add\n        /* \"#utility.yul\":3056:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3198   */\n      tag_127\n        /* \"#utility.yul\":3193:3197   */\n      dup2\n        /* \"#utility.yul\":3184:3190   */\n      dup5\n        /* \"#utility.yul\":3120:3198   */\n      tag_106\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3112:3198   */\n      swap1\n      pop\n        /* \"#utility.yul\":3010:3205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3211:3433   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":3342:3344   */\n      0x20\n        /* \"#utility.yul\":3331:3340   */\n      dup3\n        /* \"#utility.yul\":3327:3345   */\n      add\n        /* \"#utility.yul\":3319:3345   */\n      swap1\n      pop\n        /* \"#utility.yul\":3355:3426   */\n      tag_129\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3412:3421   */\n      dup4\n        /* \"#utility.yul\":3408:3425   */\n      add\n        /* \"#utility.yul\":3399:3405   */\n      dup5\n        /* \"#utility.yul\":3355:3426   */\n      tag_116\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3309:3433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3439:3653   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":3566:3568   */\n      0x20\n        /* \"#utility.yul\":3555:3564   */\n      dup3\n        /* \"#utility.yul\":3551:3569   */\n      add\n        /* \"#utility.yul\":3543:3569   */\n      swap1\n      pop\n        /* \"#utility.yul\":3579:3646   */\n      tag_131\n        /* \"#utility.yul\":3643:3644   */\n      0x00\n        /* \"#utility.yul\":3632:3641   */\n      dup4\n        /* \"#utility.yul\":3628:3645   */\n      add\n        /* \"#utility.yul\":3619:3625   */\n      dup5\n        /* \"#utility.yul\":3579:3646   */\n      tag_120\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3533:3653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3659:3758   */\n    tag_109:\n      0x00\n        /* \"#utility.yul\":3745:3750   */\n      dup2\n        /* \"#utility.yul\":3739:3751   */\n      mload\n        /* \"#utility.yul\":3729:3751   */\n      swap1\n      pop\n        /* \"#utility.yul\":3718:3758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3764:3933   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":3882:3888   */\n      dup3\n        /* \"#utility.yul\":3877:3880   */\n      dup3\n        /* \"#utility.yul\":3870:3889   */\n      mstore\n        /* \"#utility.yul\":3922:3926   */\n      0x20\n        /* \"#utility.yul\":3917:3920   */\n      dup3\n        /* \"#utility.yul\":3913:3927   */\n      add\n        /* \"#utility.yul\":3898:3927   */\n      swap1\n      pop\n        /* \"#utility.yul\":3860:3933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3939:4244   */\n    tag_76:\n      0x00\n        /* \"#utility.yul\":3998:4018   */\n      tag_135\n        /* \"#utility.yul\":4016:4017   */\n      dup3\n        /* \"#utility.yul\":3998:4018   */\n      tag_119\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3993:4018   */\n      swap2\n      pop\n        /* \"#utility.yul\":4032:4052   */\n      tag_136\n        /* \"#utility.yul\":4050:4051   */\n      dup4\n        /* \"#utility.yul\":4032:4052   */\n      tag_119\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4027:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":4186:4187   */\n      dup3\n        /* \"#utility.yul\":4118:4184   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4114:4188   */\n      sub\n        /* \"#utility.yul\":4111:4112   */\n      dup3\n        /* \"#utility.yul\":4108:4189   */\n      gt\n        /* \"#utility.yul\":4105:4107   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4192:4210   */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4105:4107   */\n    tag_137:\n        /* \"#utility.yul\":4236:4237   */\n      dup3\n        /* \"#utility.yul\":4233:4234   */\n      dup3\n        /* \"#utility.yul\":4229:4238   */\n      add\n        /* \"#utility.yul\":4222:4238   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4441   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":4310:4330   */\n      tag_141\n        /* \"#utility.yul\":4328:4329   */\n      dup3\n        /* \"#utility.yul\":4310:4330   */\n      tag_119\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4305:4330   */\n      swap2\n      pop\n        /* \"#utility.yul\":4344:4364   */\n      tag_142\n        /* \"#utility.yul\":4362:4363   */\n      dup4\n        /* \"#utility.yul\":4344:4364   */\n      tag_119\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4339:4364   */\n      swap3\n      pop\n        /* \"#utility.yul\":4383:4384   */\n      dup3\n        /* \"#utility.yul\":4380:4381   */\n      dup3\n        /* \"#utility.yul\":4377:4385   */\n      lt\n        /* \"#utility.yul\":4374:4376   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4388:4406   */\n      tag_144\n      tag_139\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4374:4376   */\n    tag_143:\n        /* \"#utility.yul\":4433:4434   */\n      dup3\n        /* \"#utility.yul\":4430:4431   */\n      dup3\n        /* \"#utility.yul\":4426:4435   */\n      sub\n        /* \"#utility.yul\":4418:4435   */\n      swap1\n      pop\n        /* \"#utility.yul\":4295:4441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4447:4543   */\n    tag_145:\n      0x00\n        /* \"#utility.yul\":4513:4537   */\n      tag_147\n        /* \"#utility.yul\":4531:4536   */\n      dup3\n        /* \"#utility.yul\":4513:4537   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4502:4537   */\n      swap1\n      pop\n        /* \"#utility.yul\":4492:4543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4549:4639   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":4626:4631   */\n      dup2\n        /* \"#utility.yul\":4619:4632   */\n      iszero\n        /* \"#utility.yul\":4612:4633   */\n      iszero\n        /* \"#utility.yul\":4601:4633   */\n      swap1\n      pop\n        /* \"#utility.yul\":4591:4639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4645:4771   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":4722:4764   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4715:4720   */\n      dup3\n        /* \"#utility.yul\":4711:4765   */\n      and\n        /* \"#utility.yul\":4700:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4690:4771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4777:4854   */\n    tag_119:\n      0x00\n        /* \"#utility.yul\":4843:4848   */\n      dup2\n        /* \"#utility.yul\":4832:4848   */\n      swap1\n      pop\n        /* \"#utility.yul\":4822:4854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:4946   */\n    tag_123:\n      0x00\n        /* \"#utility.yul\":4935:4939   */\n      0xff\n        /* \"#utility.yul\":4928:4933   */\n      dup3\n        /* \"#utility.yul\":4924:4940   */\n      and\n        /* \"#utility.yul\":4913:4940   */\n      swap1\n      pop\n        /* \"#utility.yul\":4903:4946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4952:5259   */\n    tag_113:\n        /* \"#utility.yul\":5020:5021   */\n      0x00\n        /* \"#utility.yul\":5030:5143   */\n    tag_154:\n        /* \"#utility.yul\":5044:5050   */\n      dup4\n        /* \"#utility.yul\":5041:5042   */\n      dup2\n        /* \"#utility.yul\":5038:5051   */\n      lt\n        /* \"#utility.yul\":5030:5143   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":5129:5130   */\n      dup1\n        /* \"#utility.yul\":5124:5127   */\n      dup3\n        /* \"#utility.yul\":5120:5131   */\n      add\n        /* \"#utility.yul\":5114:5132   */\n      mload\n        /* \"#utility.yul\":5110:5111   */\n      dup2\n        /* \"#utility.yul\":5105:5108   */\n      dup5\n        /* \"#utility.yul\":5101:5112   */\n      add\n        /* \"#utility.yul\":5094:5133   */\n      mstore\n        /* \"#utility.yul\":5066:5068   */\n      0x20\n        /* \"#utility.yul\":5063:5064   */\n      dup2\n        /* \"#utility.yul\":5059:5069   */\n      add\n        /* \"#utility.yul\":5054:5069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5030:5143   */\n      jump(tag_154)\n    tag_156:\n        /* \"#utility.yul\":5161:5167   */\n      dup4\n        /* \"#utility.yul\":5158:5159   */\n      dup2\n        /* \"#utility.yul\":5155:5168   */\n      gt\n        /* \"#utility.yul\":5152:5154   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":5241:5242   */\n      0x00\n        /* \"#utility.yul\":5232:5238   */\n      dup5\n        /* \"#utility.yul\":5227:5230   */\n      dup5\n        /* \"#utility.yul\":5223:5239   */\n      add\n        /* \"#utility.yul\":5216:5243   */\n      mstore\n        /* \"#utility.yul\":5152:5154   */\n    tag_157:\n        /* \"#utility.yul\":5001:5259   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5265:5445   */\n    tag_139:\n        /* \"#utility.yul\":5313:5390   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5310:5311   */\n      0x00\n        /* \"#utility.yul\":5303:5391   */\n      mstore\n        /* \"#utility.yul\":5410:5414   */\n      0x11\n        /* \"#utility.yul\":5407:5408   */\n      0x04\n        /* \"#utility.yul\":5400:5415   */\n      mstore\n        /* \"#utility.yul\":5434:5438   */\n      0x24\n        /* \"#utility.yul\":5431:5432   */\n      0x00\n        /* \"#utility.yul\":5424:5439   */\n      revert\n        /* \"#utility.yul\":5451:5553   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":5543:5545   */\n      0x1f\n        /* \"#utility.yul\":5539:5546   */\n      not\n        /* \"#utility.yul\":5534:5536   */\n      0x1f\n        /* \"#utility.yul\":5527:5532   */\n      dup4\n        /* \"#utility.yul\":5523:5537   */\n      add\n        /* \"#utility.yul\":5519:5547   */\n      and\n        /* \"#utility.yul\":5509:5547   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5559:5681   */\n    tag_81:\n        /* \"#utility.yul\":5632:5656   */\n      tag_161\n        /* \"#utility.yul\":5650:5655   */\n      dup2\n        /* \"#utility.yul\":5632:5656   */\n      tag_145\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5625:5630   */\n      dup2\n        /* \"#utility.yul\":5622:5657   */\n      eq\n        /* \"#utility.yul\":5612:5614   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5671:5672   */\n      0x00\n        /* \"#utility.yul\":5668:5669   */\n      dup1\n        /* \"#utility.yul\":5661:5673   */\n      revert\n        /* \"#utility.yul\":5612:5614   */\n    tag_162:\n        /* \"#utility.yul\":5602:5681   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5687:5809   */\n    tag_85:\n        /* \"#utility.yul\":5760:5784   */\n      tag_164\n        /* \"#utility.yul\":5778:5783   */\n      dup2\n        /* \"#utility.yul\":5760:5784   */\n      tag_119\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5753:5758   */\n      dup2\n        /* \"#utility.yul\":5750:5785   */\n      eq\n        /* \"#utility.yul\":5740:5742   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":5799:5800   */\n      0x00\n        /* \"#utility.yul\":5796:5797   */\n      dup1\n        /* \"#utility.yul\":5789:5801   */\n      revert\n        /* \"#utility.yul\":5740:5742   */\n    tag_165:\n        /* \"#utility.yul\":5730:5809   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e47414244160baf9dcc3dd8a24016d8d8f271556de1be0a71e79155f648360e364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610b23806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906108f9565b60405180910390f35b6100d060048036038101906100cb919061083c565b610239565b6040516100dd91906108de565b60405180910390f35b6100ee610250565b6040516100fb919061091b565b60405180910390f35b61011e600480360381019061011991906107ed565b610256565b60405161012b91906108de565b60405180910390f35b61013c610421565b6040516101499190610936565b60405180910390f35b61016c60048036038101906101679190610788565b610426565b604051610179919061091b565b60405180910390f35b61018a61043e565b60405161019791906108f9565b60405180910390f35b6101ba60048036038101906101b5919061083c565b610477565b6040516101c791906108de565b60405180910390f35b6101ea60048036038101906101e591906107b1565b61048e565b6040516101f7919061091b565b60405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60006102463384846104b3565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461040b5761038a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461059e90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6104168484846105b4565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b60006104843384846105b4565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610591919061091b565b60405180910390a3505050565b600081836105ac91906109c3565b905092915050565b61060681600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461059e90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461074890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161073b919061091b565b60405180910390a3505050565b60008183610756919061096d565b905092915050565b60008135905061076d81610abf565b92915050565b60008135905061078281610ad6565b92915050565b60006020828403121561079a57600080fd5b60006107a88482850161075e565b91505092915050565b600080604083850312156107c457600080fd5b60006107d28582860161075e565b92505060206107e38582860161075e565b9150509250929050565b60008060006060848603121561080257600080fd5b60006108108682870161075e565b93505060206108218682870161075e565b925050604061083286828701610773565b9150509250925092565b6000806040838503121561084f57600080fd5b600061085d8582860161075e565b925050602061086e85828601610773565b9150509250929050565b61088181610a09565b82525050565b600061089282610951565b61089c818561095c565b93506108ac818560208601610a4c565b6108b581610aae565b840191505092915050565b6108c981610a35565b82525050565b6108d881610a3f565b82525050565b60006020820190506108f36000830184610878565b92915050565b600060208201905081810360008301526109138184610887565b905092915050565b600060208201905061093060008301846108c0565b92915050565b600060208201905061094b60008301846108cf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061097882610a35565b915061098383610a35565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109b8576109b7610a7f565b5b828201905092915050565b60006109ce82610a35565b91506109d983610a35565b9250828210156109ec576109eb610a7f565b5b828203905092915050565b6000610a0282610a15565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610a6a578082015181840152602081019050610a4f565b83811115610a79576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610ac8816109f7565b8114610ad357600080fd5b50565b610adf81610a35565b8114610aea57600080fd5b5056fea2646970667358221220e47414244160baf9dcc3dd8a24016d8d8f271556de1be0a71e79155f648360e364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB23 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 CALLER DUP5 DUP5 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x40B JUMPI PUSH2 0x38A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x59E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x416 DUP5 DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 CALLER DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x606 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x59E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x748 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76D DUP2 PUSH2 0xABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7A8 DUP5 DUP3 DUP6 ADD PUSH2 0x75E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E3 DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP7 DUP3 DUP8 ADD PUSH2 0x75E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x821 DUP7 DUP3 DUP8 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x832 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x85D DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x86E DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x881 DUP2 PUSH2 0xA09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x892 DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x89C DUP2 DUP6 PUSH2 0x95C JUMP JUMPDEST SWAP4 POP PUSH2 0x8AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x8B5 DUP2 PUSH2 0xAAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0xA35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0xA3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x913 DUP2 DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP2 POP PUSH2 0x983 DUP4 PUSH2 0xA35 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B7 PUSH2 0xA7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D9 DUP4 PUSH2 0xA35 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0xA7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH2 0xA35 JUMP JUMPDEST DUP2 EQ PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH21 0x14244160BAF9DCC3DD8A24016D8D8F271556DE1BE0 0xA7 0x1E PUSH26 0x155F648360E364736F6C63430008000033000000000000000000 ",
							"sourceMap": "163:2129:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5812:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:3"
															},
															"nodeType": "YulIf",
															"src": "373:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:3",
														"type": ""
													}
												],
												"src": "297:262:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:3"
															},
															"nodeType": "YulIf",
															"src": "658:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:3",
														"type": ""
													}
												],
												"src": "565:407:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:3"
															},
															"nodeType": "YulIf",
															"src": "1088:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:3",
														"type": ""
													}
												],
												"src": "978:552:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:3"
															},
															"nodeType": "YulIf",
															"src": "1629:2:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:3",
														"type": ""
													}
												],
												"src": "1536:407:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:3",
														"type": ""
													}
												],
												"src": "1949:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:3",
														"type": ""
													}
												],
												"src": "2064:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2499:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2516:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2539:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2521:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2521:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2509:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2509:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2487:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2494:3:3",
														"type": ""
													}
												],
												"src": "2434:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2619:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2636:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2657:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "2641:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2629:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2607:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2614:3:3",
														"type": ""
													}
												],
												"src": "2558:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2768:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2778:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2790:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2801:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2786:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2778:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2852:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2865:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2876:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2861:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2861:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2814:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2814:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2740:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2752:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2763:4:3",
														"type": ""
													}
												],
												"src": "2676:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3010:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3020:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3032:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3043:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3028:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3020:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3067:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3078:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3063:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3086:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3092:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3056:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3112:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3184:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3193:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3120:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2982:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2994:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3005:4:3",
														"type": ""
													}
												],
												"src": "2892:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3319:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3331:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3342:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3327:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3319:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3399:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3355:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3355:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3355:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3281:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3293:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3304:4:3",
														"type": ""
													}
												],
												"src": "3211:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3533:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3543:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3555:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3551:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3543:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3619:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3632:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3643:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3628:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3579:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3579:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3505:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3517:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3528:4:3",
														"type": ""
													}
												],
												"src": "3439:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3718:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3729:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3745:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3739:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3739:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3701:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3711:6:3",
														"type": ""
													}
												],
												"src": "3659:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3860:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3877:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3882:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3870:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3898:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3917:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3922:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3898:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3832:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3837:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3848:11:3",
														"type": ""
													}
												],
												"src": "3764:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3983:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3993:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4016:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3998:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3993:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4027:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4050:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4032:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4027:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4190:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4192:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4192:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4192:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4111:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4118:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4186:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4114:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4114:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4108:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:81:3"
															},
															"nodeType": "YulIf",
															"src": "4105:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4222:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4233:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4236:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4229:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4222:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3970:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3973:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3979:3:3",
														"type": ""
													}
												],
												"src": "3939:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4295:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4305:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4328:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4310:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4305:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4339:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4362:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4344:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4339:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4388:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4380:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4383:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4377:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4377:8:3"
															},
															"nodeType": "YulIf",
															"src": "4374:2:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4418:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4430:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4433:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4426:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4418:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4290:4:3",
														"type": ""
													}
												],
												"src": "4250:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4492:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4502:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4531:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4513:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4502:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4474:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4484:7:3",
														"type": ""
													}
												],
												"src": "4447:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4601:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4626:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4619:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4619:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4612:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4601:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4573:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4583:7:3",
														"type": ""
													}
												],
												"src": "4549:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4690:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4700:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4715:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4711:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4711:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4700:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4672:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4682:7:3",
														"type": ""
													}
												],
												"src": "4645:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4822:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4832:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4843:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4832:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4804:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4814:7:3",
														"type": ""
													}
												],
												"src": "4777:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4903:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4913:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4928:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4935:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4913:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4885:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4895:7:3",
														"type": ""
													}
												],
												"src": "4860:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5011:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5020:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5015:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5105:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5110:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5101:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5101:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5124:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5129:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5120:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5120:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5114:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5114:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5041:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5044:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5038:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5052:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5054:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5063:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5066:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5059:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5059:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5054:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5034:3:3",
																"statements": []
															},
															"src": "5030:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5177:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5227:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5232:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5223:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5223:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5241:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5216:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5216:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5216:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5158:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5161:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5155:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5155:13:3"
															},
															"nodeType": "YulIf",
															"src": "5152:2:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4983:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4988:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4993:6:3",
														"type": ""
													}
												],
												"src": "4952:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5310:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5303:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5407:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5410:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5400:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5431:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5434:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5265:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5499:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5509:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5527:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5534:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5543:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5539:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5539:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5482:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5492:6:3",
														"type": ""
													}
												],
												"src": "5451:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5602:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5659:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5668:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5671:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5661:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5661:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5661:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5625:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5650:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5632:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5632:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5622:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:43:3"
															},
															"nodeType": "YulIf",
															"src": "5612:2:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5595:5:3",
														"type": ""
													}
												],
												"src": "5559:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5730:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5787:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5796:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5799:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5789:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5789:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5789:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5753:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5778:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5760:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5760:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5750:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5750:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5743:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:43:3"
															},
															"nodeType": "YulIf",
															"src": "5740:2:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5723:5:3",
														"type": ""
													}
												],
												"src": "5687:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906108f9565b60405180910390f35b6100d060048036038101906100cb919061083c565b610239565b6040516100dd91906108de565b60405180910390f35b6100ee610250565b6040516100fb919061091b565b60405180910390f35b61011e600480360381019061011991906107ed565b610256565b60405161012b91906108de565b60405180910390f35b61013c610421565b6040516101499190610936565b60405180910390f35b61016c60048036038101906101679190610788565b610426565b604051610179919061091b565b60405180910390f35b61018a61043e565b60405161019791906108f9565b60405180910390f35b6101ba60048036038101906101b5919061083c565b610477565b6040516101c791906108de565b60405180910390f35b6101ea60048036038101906101e591906107b1565b61048e565b6040516101f7919061091b565b60405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60006102463384846104b3565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461040b5761038a82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461059e90919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6104168484846105b4565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b60006104843384846105b4565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610591919061091b565b60405180910390a3505050565b600081836105ac91906109c3565b905092915050565b61060681600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461059e90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069b81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461074890919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161073b919061091b565b60405180910390a3505050565b60008183610756919061096d565b905092915050565b60008135905061076d81610abf565b92915050565b60008135905061078281610ad6565b92915050565b60006020828403121561079a57600080fd5b60006107a88482850161075e565b91505092915050565b600080604083850312156107c457600080fd5b60006107d28582860161075e565b92505060206107e38582860161075e565b9150509250929050565b60008060006060848603121561080257600080fd5b60006108108682870161075e565b93505060206108218682870161075e565b925050604061083286828701610773565b9150509250925092565b6000806040838503121561084f57600080fd5b600061085d8582860161075e565b925050602061086e85828601610773565b9150509250929050565b61088181610a09565b82525050565b600061089282610951565b61089c818561095c565b93506108ac818560208601610a4c565b6108b581610aae565b840191505092915050565b6108c981610a35565b82525050565b6108d881610a3f565b82525050565b60006020820190506108f36000830184610878565b92915050565b600060208201905081810360008301526109138184610887565b905092915050565b600060208201905061093060008301846108c0565b92915050565b600060208201905061094b60008301846108cf565b92915050565b600081519050919050565b600082825260208201905092915050565b600061097882610a35565b915061098383610a35565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109b8576109b7610a7f565b5b828201905092915050565b60006109ce82610a35565b91506109d983610a35565b9250828210156109ec576109eb610a7f565b5b828203905092915050565b6000610a0282610a15565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610a6a578082015181840152602081019050610a4f565b83811115610a79576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610ac8816109f7565b8114610ad357600080fd5b50565b610adf81610a35565b8114610aea57600080fd5b5056fea2646970667358221220e47414244160baf9dcc3dd8a24016d8d8f271556de1be0a71e79155f648360e364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x421 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x788 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 CALLER DUP5 DUP5 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x40B JUMPI PUSH2 0x38A DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x59E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x416 DUP5 DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x484 CALLER DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x5AC SWAP2 SWAP1 PUSH2 0x9C3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x606 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x59E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x69B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x748 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x73B SWAP2 SWAP1 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x76D DUP2 PUSH2 0xABF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x782 DUP2 PUSH2 0xAD6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7A8 DUP5 DUP3 DUP6 ADD PUSH2 0x75E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7D2 DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x7E3 DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x810 DUP7 DUP3 DUP8 ADD PUSH2 0x75E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x821 DUP7 DUP3 DUP8 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x832 DUP7 DUP3 DUP8 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x85D DUP6 DUP3 DUP7 ADD PUSH2 0x75E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x86E DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x881 DUP2 PUSH2 0xA09 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x892 DUP3 PUSH2 0x951 JUMP JUMPDEST PUSH2 0x89C DUP2 DUP6 PUSH2 0x95C JUMP JUMPDEST SWAP4 POP PUSH2 0x8AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x8B5 DUP2 PUSH2 0xAAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C9 DUP2 PUSH2 0xA35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0xA3F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x913 DUP2 DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x930 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x94B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x978 DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP2 POP PUSH2 0x983 DUP4 PUSH2 0xA35 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B7 PUSH2 0xA7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CE DUP3 PUSH2 0xA35 JUMP JUMPDEST SWAP2 POP PUSH2 0x9D9 DUP4 PUSH2 0xA35 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x9EC JUMPI PUSH2 0x9EB PUSH2 0xA7F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA02 DUP3 PUSH2 0xA15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA6A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAC8 DUP2 PUSH2 0x9F7 JUMP JUMPDEST DUP2 EQ PUSH2 0xAD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xADF DUP2 PUSH2 0xA35 JUMP JUMPDEST DUP2 EQ PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 PUSH21 0x14244160BAF9DCC3DD8A24016D8D8F271556DE1BE0 0xA7 0x1E PUSH26 0x155F648360E364736F6C63430008000033000000000000000000 ",
							"sourceMap": "163:2129:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;240:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1908:381;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;354:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;446:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1752:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;240:51;;;;;;;;;;;;;;;;;;;:::o;1588:156::-;1661:4;1678:36;1687:10;1699:7;1708:5;1678:8;:36::i;:::-;1732:4;1725:11;;1588:156;;;;:::o;405:32::-;;;;:::o;1908:381::-;1995:4;2109:17;2078:9;:15;2088:4;2078:15;;;;;;;;;;;;;;;:27;2094:10;2078:27;;;;;;;;;;;;;;;;:48;2074:149;;2173:38;2205:5;2173:9;:15;2183:4;2173:15;;;;;;;;;;;;;;;:27;2189:10;2173:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2143:9;:15;2153:4;2143:15;;;;;;;;;;;;;;;:27;2159:10;2143:27;;;;;;;;;;;;;;;:68;;;;2074:149;2233:26;2243:4;2249:2;2253:5;2233:9;:26::i;:::-;2277:4;2270:11;;1908:381;;;;;:::o;354:44::-;396:2;354:44;:::o;446:50::-;;;;;;;;;;;;;;;;;:::o;298:49::-;;;;;;;;;;;;;;;;;;;:::o;1752:148::-;1821:4;1838:32;1848:10;1860:2;1864:5;1838:9;:32::i;:::-;1888:4;1881:11;;1752:148;;;;:::o;503:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1183:169::-;1292:5;1264:9;:16;1274:5;1264:16;;;;;;;;;;;;;;;:25;1281:7;1264:25;;;;;;;;;;;;;;;:33;;;;1329:7;1313:31;;1322:5;1313:31;;;1338:5;1313:31;;;;;;:::i;:::-;;;;;;;;1183:169;;;:::o;3122:96:0:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;1360:220:1:-;1454:26;1474:5;1454:9;:15;1464:4;1454:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1436:9;:15;1446:4;1436:15;;;;;;;;;;;;;;;:44;;;;1507:24;1525:5;1507:9;:13;1517:2;1507:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1491:9;:13;1501:2;1491:13;;;;;;;;;;;;;;;:40;;;;1562:2;1547:25;;1556:4;1547:25;;;1566:5;1547:25;;;;;;:::i;:::-;;;;;;;;1360:220;;;:::o;2755:96:0:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7:139:3:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:118::-;2521:24;2539:5;2521:24;:::i;:::-;2516:3;2509:37;2499:53;;:::o;2558:112::-;2641:22;2657:5;2641:22;:::i;:::-;2636:3;2629:35;2619:51;;:::o;2676:210::-;;2801:2;2790:9;2786:18;2778:26;;2814:65;2876:1;2865:9;2861:17;2852:6;2814:65;:::i;:::-;2768:118;;;;:::o;2892:313::-;;3043:2;3032:9;3028:18;3020:26;;3092:9;3086:4;3082:20;3078:1;3067:9;3063:17;3056:47;3120:78;3193:4;3184:6;3120:78;:::i;:::-;3112:86;;3010:195;;;;:::o;3211:222::-;;3342:2;3331:9;3327:18;3319:26;;3355:71;3423:1;3412:9;3408:17;3399:6;3355:71;:::i;:::-;3309:124;;;;:::o;3439:214::-;;3566:2;3555:9;3551:18;3543:26;;3579:67;3643:1;3632:9;3628:17;3619:6;3579:67;:::i;:::-;3533:120;;;;:::o;3659:99::-;;3745:5;3739:12;3729:22;;3718:40;;;:::o;3764:169::-;;3882:6;3877:3;3870:19;3922:4;3917:3;3913:14;3898:29;;3860:73;;;;:::o;3939:305::-;;3998:20;4016:1;3998:20;:::i;:::-;3993:25;;4032:20;4050:1;4032:20;:::i;:::-;4027:25;;4186:1;4118:66;4114:74;4111:1;4108:81;4105:2;;;4192:18;;:::i;:::-;4105:2;4236:1;4233;4229:9;4222:16;;3983:261;;;;:::o;4250:191::-;;4310:20;4328:1;4310:20;:::i;:::-;4305:25;;4344:20;4362:1;4344:20;:::i;:::-;4339:25;;4383:1;4380;4377:8;4374:2;;;4388:18;;:::i;:::-;4374:2;4433:1;4430;4426:9;4418:17;;4295:146;;;;:::o;4447:96::-;;4513:24;4531:5;4513:24;:::i;:::-;4502:35;;4492:51;;;:::o;4549:90::-;;4626:5;4619:13;4612:21;4601:32;;4591:48;;;:::o;4645:126::-;;4722:42;4715:5;4711:54;4700:65;;4690:81;;;:::o;4777:77::-;;4843:5;4832:16;;4822:32;;;:::o;4860:86::-;;4935:4;4928:5;4924:16;4913:27;;4903:43;;;:::o;4952:307::-;5020:1;5030:113;5044:6;5041:1;5038:13;5030:113;;;5129:1;5124:3;5120:11;5114:18;5110:1;5105:3;5101:11;5094:39;5066:2;5063:1;5059:10;5054:15;;5030:113;;;5161:6;5158:1;5155:13;5152:2;;;5241:1;5232:6;5227:3;5223:16;5216:27;5152:2;5001:258;;;;:::o;5265:180::-;5313:77;5310:1;5303:88;5410:4;5407:1;5400:15;5434:4;5431:1;5424:15;5451:102;;5543:2;5539:7;5534:2;5527:5;5523:14;5519:28;5509:38;;5499:54;;;:::o;5559:122::-;5632:24;5650:5;5632:24;:::i;:::-;5625:5;5622:35;5612:2;;5671:1;5668;5661:12;5612:2;5602:79;:::o;5687:122::-;5760:24;5778:5;5760:24;:::i;:::-;5753:5;5750:35;5740:2;;5799:1;5796;5789:12;5740:2;5730:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "570200",
								"executionCost": "606",
								"totalCost": "570806"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1536",
								"decimals()": "335",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1174",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 2292,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e47414244160baf9dcc3dd8a24016d8d8f271556de1be0a71e79155f648360e364736f6c63430008000033",
									".code": [
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 163,
											"end": 2292,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "45656C7377617020563200000000000000000000000000000000000000000000"
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1687,
											"end": 1697,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1678,
											"end": 1714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1678,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1736,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1725,
											"end": 1736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1725,
											"end": 1736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1744,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 405,
											"end": 437,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2092,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2093,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2105,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2126,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2223,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2205,
											"end": 2210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2187,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2188,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2200,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2173,
											"end": 2204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2173,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2157,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2158,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2170,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2211,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2233,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2281,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2270,
											"end": 2281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 2289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 354,
											"end": 398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 354,
											"end": 398,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 496,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "45454C2D56320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 298,
											"end": 347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1848,
											"end": 1858,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1838,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1892,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1881,
											"end": 1892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 503,
											"end": 572,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1279,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1280,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1289,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1338,
											"end": 1343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1344,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1352,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1474,
											"end": 1479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1468,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1454,
											"end": 1473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1451,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1480,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1480,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1525,
											"end": 1530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1516,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1507,
											"end": 1524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1507,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1531,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1564,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1560,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1566,
											"end": 1571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1572,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1580,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2552,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2434,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2539,
											"end": 2544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2521,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2521,
											"end": 2545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2521,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2519,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2552,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2558,
											"end": 2670,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2558,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2657,
											"end": 2662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2641,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2641,
											"end": 2663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2663,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2641,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2639,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2664,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2670,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 2886,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2676,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2886,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2803,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2790,
											"end": 2799,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2861,
											"end": 2878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2814,
											"end": 2879,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2879,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2814,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2886,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2886,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2768,
											"end": 2886,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2892,
											"end": 3205,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2892,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 3205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3046,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3102,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3080,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3103,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3120,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3193,
											"end": 3197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3120,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3120,
											"end": 3198,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3198,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3120,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3205,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3205,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3010,
											"end": 3205,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3211,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3211,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3211,
											"end": 3433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3399,
											"end": 3405,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3355,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3355,
											"end": 3426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3426,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3355,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3433,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3433,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3433,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3439,
											"end": 3653,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3439,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3653,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3555,
											"end": 3564,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3641,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3628,
											"end": 3645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3579,
											"end": 3646,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3579,
											"end": 3646,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 3579,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3653,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3653,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3653,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3659,
											"end": 3758,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3659,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3729,
											"end": 3751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3729,
											"end": 3751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3758,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3764,
											"end": 3933,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3764,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3764,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3877,
											"end": 3880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3922,
											"end": 3926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3920,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3927,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3933,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3933,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3860,
											"end": 3933,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3939,
											"end": 4244,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3939,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3939,
											"end": 4244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3998,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4032,
											"end": 4052,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4032,
											"end": 4052,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4032,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4052,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4052,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4118,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4114,
											"end": 4188,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4108,
											"end": 4189,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4192,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4105,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4229,
											"end": 4238,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4244,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4244,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4244,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4250,
											"end": 4441,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4250,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4310,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4310,
											"end": 4330,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4310,
											"end": 4330,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 4310,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4330,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4344,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4362,
											"end": 4363,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4344,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4344,
											"end": 4364,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4344,
											"end": 4364,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4344,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4377,
											"end": 4385,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4374,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4435,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4441,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4441,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4441,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4447,
											"end": 4543,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4447,
											"end": 4543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4531,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4513,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4492,
											"end": 4543,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4631,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4632,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4633,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4639,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4639,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4645,
											"end": 4771,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4645,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4764,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4715,
											"end": 4720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4711,
											"end": 4765,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4700,
											"end": 4765,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4700,
											"end": 4765,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4771,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4777,
											"end": 4854,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4777,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4777,
											"end": 4854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4854,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4860,
											"end": 4946,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4860,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4924,
											"end": 4940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4903,
											"end": 4946,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4952,
											"end": 5259,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4952,
											"end": 5259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5044,
											"end": 5050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5038,
											"end": 5051,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5120,
											"end": 5131,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5114,
											"end": 5132,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5105,
											"end": 5108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5094,
											"end": 5133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5068,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5069,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5069,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5054,
											"end": 5069,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 5030,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5161,
											"end": 5167,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5168,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5227,
											"end": 5230,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5239,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5216,
											"end": 5243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5001,
											"end": 5259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5265,
											"end": 5445,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 5265,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5313,
											"end": 5390,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5310,
											"end": 5311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5414,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5407,
											"end": 5408,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5400,
											"end": 5415,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5438,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5431,
											"end": 5432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5451,
											"end": 5553,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5451,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5451,
											"end": 5553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5534,
											"end": 5536,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5527,
											"end": 5532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5537,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5547,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5509,
											"end": 5547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5553,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5499,
											"end": 5553,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5559,
											"end": 5681,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5559,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5650,
											"end": 5655,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5632,
											"end": 5656,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5656,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5632,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5625,
											"end": 5630,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5657,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5673,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5681,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5687,
											"end": 5809,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5687,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5760,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5753,
											"end": 5758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5796,
											"end": 5797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5801,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5740,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5730,
											"end": 5809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5730,
											"end": 5809,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EelswapERC20.sol\":\"EelswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/EelswapERC20.sol\":{\"keccak256\":\"0x7384936f17c445baa523b88c354b03c5323919d214638a0ce95a727d91b78897\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88dbe0666b5d765d052911e950a1ea7e47942cb89550cd2b2e9a410b32b66ad8\",\"dweb:/ipfs/QmaZKGvUscwaFzfS2VJXUcGPgh191d3jEz8k9UMcUL4d5t\"]},\"contracts/interfaces/IEelswapERC20.sol\":{\"keccak256\":\"0x7a244d6ce4c22ddbd07832a57eb3aa4a0e93f11c3b92501ac89b760a6516ccb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3390c32667ca8f3c410b6c904b71be85fdd0967ab96d790738e852d2e41f5c\",\"dweb:/ipfs/QmR8tJTrH9YYiycwvJBGeorZsKYpqc334V76zFwE4wUKGA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 335,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 340,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 347,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"IEelswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEelswapERC20.sol\":\"IEelswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IEelswapERC20.sol\":{\"keccak256\":\"0x7a244d6ce4c22ddbd07832a57eb3aa4a0e93f11c3b92501ac89b760a6516ccb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3390c32667ca8f3c410b6c904b71be85fdd0967ab96d790738e852d2e41f5c\",\"dweb:/ipfs/QmR8tJTrH9YYiycwvJBGeorZsKYpqc334V76zFwE4wUKGA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0"
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"contracts/EelswapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/EelswapERC20.sol",
					"exportedSymbols": {
						"EelswapERC20": [
							575
						],
						"IEelswapERC20": [
							659
						],
						"SafeMath": [
							311
						]
					},
					"id": 576,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/interfaces/IEelswapERC20.sol",
							"file": "./interfaces/IEelswapERC20.sol",
							"id": 314,
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 660,
							"src": "60:40:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 315,
							"nodeType": "ImportDirective",
							"scope": 576,
							"sourceUnit": 312,
							"src": "102:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 316,
										"name": "IEelswapERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 659,
										"src": "188:13:1"
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "188:13:1"
								}
							],
							"contractDependencies": [
								659
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 575,
							"linearizedBaseContracts": [
								575,
								659
							],
							"name": "EelswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 320,
									"libraryName": {
										"id": 318,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "214:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "208:24:1",
									"typeName": {
										"id": 319,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "227:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										598
									],
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 324,
									"mutability": "constant",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "254:8:1"
									},
									"scope": 575,
									"src": "240:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 321,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "240:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45656c73776170205632",
										"id": 323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "279:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc7663cb79c4c2471f08ab33bcb482270aba9268f35513074a249ce070f952b9",
											"typeString": "literal_string \"Eelswap V2\""
										},
										"value": "Eelswap V2"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										603
									],
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 328,
									"mutability": "constant",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "312:8:1"
									},
									"scope": 575,
									"src": "298:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 325,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "298:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45454c2d5632",
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "339:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_077f46f1268ccd289e7279c4fa37dc2a3caacd2560200f1a7ec776901ba8b108",
											"typeString": "literal_string \"EEL-V2\""
										},
										"value": "EEL-V2"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										608
									],
									"constant": true,
									"functionSelector": "313ce567",
									"id": 332,
									"mutability": "constant",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "367:8:1"
									},
									"scope": 575,
									"src": "354:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 329,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "354:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 335,
									"mutability": "mutable",
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "417:8:1"
									},
									"scope": 575,
									"src": "405:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "405:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"constant": false,
									"functionSelector": "70a08231",
									"id": 340,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 339,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "478:8:1"
									},
									"scope": 575,
									"src": "446:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 338,
										"keyType": {
											"id": 336,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "454:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "446:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 337,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "465:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										629
									],
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 347,
									"mutability": "mutable",
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "554:8:1"
									},
									"scope": 575,
									"src": "503:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 345,
										"keyType": {
											"id": 341,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "511:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "503:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 344,
											"keyType": {
												"id": 342,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "530:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "522:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 343,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "541:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "793:153:1",
										"statements": [
											{
												"expression": {
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 354,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "804:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 357,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "834:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 355,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "818:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "818:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "818:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "804:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "804:36:1"
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 361,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "851:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 363,
														"indexExpression": {
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "861:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "851:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "885:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 364,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "867:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 366,
																"indexExpression": {
																	"id": 365,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "877:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "867:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "867:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "867:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "851:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "851:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "924:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "916:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 373,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "916:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "916:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "928:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "932:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "907:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "EmitStatement",
												"src": "902:36:1"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "760:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "772:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:24:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:0:1"
									},
									"scope": 575,
									"src": "745:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1004:168:1",
										"statements": [
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 389,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1015:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 391,
														"indexExpression": {
															"id": 390,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "1025:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1015:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 396,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1053:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 392,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "1033:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 394,
																"indexExpression": {
																	"id": 393,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "1043:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1033:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1033:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1033:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1015:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1015:44:1"
											},
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 400,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1070:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "1100:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 401,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "1084:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1084:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1084:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1070:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1070:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 410,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "1139:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1131:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1131:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1131:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1122:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "EmitStatement",
												"src": "1117:47:1"
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "969:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "983:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:26:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:0:1"
									},
									"scope": 575,
									"src": "954:218:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1253:99:1",
										"statements": [
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 429,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1264:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 432,
															"indexExpression": {
																"id": 430,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "1274:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1264:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 433,
														"indexExpression": {
															"id": 431,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "1281:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1264:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 434,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "1292:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1264:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1264:33:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 438,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "1322:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 439,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "1329:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "1338:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "1313:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1313:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "1308:36:1"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1216:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1233:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:44:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:0:1"
									},
									"scope": 575,
									"src": "1183:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "1425:155:1",
										"statements": [
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 453,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1436:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 455,
														"indexExpression": {
															"id": 454,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1446:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1436:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1474:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 456,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "1454:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 458,
																"indexExpression": {
																	"id": 457,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1464:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1454:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1454:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1454:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1436:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "1436:44:1"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 464,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1491:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 466,
														"indexExpression": {
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1501:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "1525:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 467,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "1507:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 469,
																"indexExpression": {
																	"id": 468,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1517:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1507:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1507:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1507:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1491:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "1491:40:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 476,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1556:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "1562:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "1566:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 475,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1547:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "EmitStatement",
												"src": "1542:30:1"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1379:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1393:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "1405:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1405:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1378:38:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1425:0:1"
									},
									"scope": 575,
									"src": "1360:220:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										638
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "1667:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1687:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1687:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "1699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "1708:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 492,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "1678:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "1678:36:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1732:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 491,
												"id": 500,
												"nodeType": "Return",
												"src": "1725:11:1"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 488,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1643:8:1"
									},
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1605:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1622:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1604:29:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "1661:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1661:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:6:1"
									},
									"scope": 575,
									"src": "1588:156:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "1827:73:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 513,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1848:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1848:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "1860:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "1864:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "1838:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1888:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 520,
												"nodeType": "Return",
												"src": "1881:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1803:8:1"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1770:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1782:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1782:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:24:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1821:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1821:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:6:1"
									},
									"scope": 575,
									"src": "1752:148:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										658
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "2001:288:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 534,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "2078:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 536,
															"indexExpression": {
																"id": 535,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2088:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2078:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 539,
														"indexExpression": {
															"expression": {
																"id": 537,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2094:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2094:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2078:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2114:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 541,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2114:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 540,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2109:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2109:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2109:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2078:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "2074:149:1",
												"trueBody": {
													"id": 563,
													"nodeType": "Block",
													"src": "2128:95:1",
													"statements": [
														{
															"expression": {
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 546,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "2143:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 550,
																		"indexExpression": {
																			"id": 547,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "2153:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2143:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 551,
																	"indexExpression": {
																		"expression": {
																			"id": 548,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2159:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2159:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2143:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 559,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "2205:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 552,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 347,
																					"src": "2173:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 554,
																				"indexExpression": {
																					"id": 553,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 524,
																					"src": "2183:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2173:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 557,
																			"indexExpression": {
																				"expression": {
																					"id": 555,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2189:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2189:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2173:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 190,
																		"src": "2173:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2173:38:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2143:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 562,
															"nodeType": "ExpressionStatement",
															"src": "2143:68:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 566,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "2243:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2249:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2253:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2233:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "2233:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2277:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 533,
												"id": 572,
												"nodeType": "Return",
												"src": "2270:11:1"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 530,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1977:8:1"
									},
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1930:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1944:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1956:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1956:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:38:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "1995:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1995:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:6:1"
									},
									"scope": 575,
									"src": "1908:381:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 576,
							"src": "163:2129:1"
						}
					],
					"src": "33:2259:1"
				},
				"id": 1
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IEelswapERC20.sol",
					"exportedSymbols": {
						"IEelswapERC20": [
							659
						]
					},
					"id": 660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 577,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 659,
							"linearizedBaseContracts": [
								659
							],
							"name": "IEelswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 585,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "106:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "129:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "154:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:60:2"
									},
									"src": "91:75:2"
								},
								{
									"anonymous": false,
									"id": 593,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "187:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "209:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "229:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:54:2"
									},
									"src": "172:69:2"
								},
								{
									"functionSelector": "06fdde03",
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "288:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:2"
									},
									"scope": 659,
									"src": "249:54:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:2:2"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "349:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:2"
									},
									"scope": 659,
									"src": "309:55:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "387:2:2"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "413:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 605,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "413:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:7:2"
									},
									"scope": 659,
									"src": "370:50:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:2"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "472:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:6:2"
									},
									"scope": 659,
									"src": "426:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "503:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:2"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "541:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "541:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:6:2"
									},
									"scope": 659,
									"src": "484:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "572:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "587:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:32:2"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "627:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "627:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:6:2"
									},
									"scope": 659,
									"src": "553:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "658:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "675:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "675:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:29:2"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "705:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "705:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:6:2"
									},
									"scope": 659,
									"src": "641:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "735:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "747:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:24:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "777:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:6:2"
									},
									"scope": 659,
									"src": "717:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "811:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "825:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "837:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "837:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:38:2"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:2"
									},
									"scope": 659,
									"src": "789:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 660,
							"src": "60:818:2"
						}
					],
					"src": "33:845:2"
				},
				"id": 2
			}
		}
	}
}