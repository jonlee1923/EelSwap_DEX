{
	"id": "4ccef2078449600ca87703a36afed15a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EelSwap.sol": {
				"content": "pragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\ncontract EelSwap {\r\n    using SafeMath for uint;\r\n\r\n    string public constant name = 'Eelswap V2';\r\n    string public constant symbol = 'EEL-V2';\r\n    uint8 public constant decimals = 18;\r\n    uint public totalSupply;\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint))public allowance;\r\n\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/EelSwap.sol": {
				"EelSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/EelSwap.sol\":90:430  contract EelSwap {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EelSwap.sol\":90:430  contract EelSwap {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/EelSwap.sol\":146:188  string public constant name = 'Eelswap V2' */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":284:307  uint public totalSupply */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":242:277  uint8 public constant decimals = 18 */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":316:357  mapping(address => uint) public balanceOf */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":195:235  string public constant symbol = 'EEL-V2' */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":364:424  mapping(address => mapping(address => uint))public allowance */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelSwap.sol\":146:188  string public constant name = 'Eelswap V2' */\n    tag_10:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x45656c7377617020563200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelSwap.sol\":284:307  uint public totalSupply */\n    tag_14:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/EelSwap.sol\":242:277  uint8 public constant decimals = 18 */\n    tag_18:\n        /* \"contracts/EelSwap.sol\":275:277  18 */\n      0x12\n        /* \"contracts/EelSwap.sol\":242:277  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/EelSwap.sol\":316:357  mapping(address => uint) public balanceOf */\n    tag_24:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EelSwap.sol\":195:235  string public constant symbol = 'EEL-V2' */\n    tag_27:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x45454c2d56320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelSwap.sol\":364:424  mapping(address => mapping(address => uint))public allowance */\n    tag_32:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_35:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_37\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_23:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":228:347   */\n    tag_40:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_43\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_35\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:961   */\n    tag_31:\n        /* \"#utility.yul\":555:561   */\n      0x00\n        /* \"#utility.yul\":563:569   */\n      dup1\n        /* \"#utility.yul\":612:614   */\n      0x40\n        /* \"#utility.yul\":600:609   */\n      dup4\n        /* \"#utility.yul\":591:598   */\n      dup6\n        /* \"#utility.yul\":587:610   */\n      sub\n        /* \"#utility.yul\":583:615   */\n      slt\n        /* \"#utility.yul\":580:699   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":618:697   */\n      tag_46\n      tag_42\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":580:699   */\n    tag_45:\n        /* \"#utility.yul\":738:739   */\n      0x00\n        /* \"#utility.yul\":763:816   */\n      tag_47\n        /* \"#utility.yul\":808:815   */\n      dup6\n        /* \"#utility.yul\":799:805   */\n      dup3\n        /* \"#utility.yul\":788:797   */\n      dup7\n        /* \"#utility.yul\":784:806   */\n      add\n        /* \"#utility.yul\":763:816   */\n      tag_35\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":753:816   */\n      swap3\n      pop\n        /* \"#utility.yul\":709:826   */\n      pop\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":891:944   */\n      tag_48\n        /* \"#utility.yul\":936:943   */\n      dup6\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup7\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":836:954   */\n      pop\n        /* \"#utility.yul\":487:961   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1331   */\n    tag_49:\n        /* \"#utility.yul\":1055:1058   */\n      0x00\n        /* \"#utility.yul\":1083:1122   */\n      tag_51\n        /* \"#utility.yul\":1116:1121   */\n      dup3\n        /* \"#utility.yul\":1083:1122   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1138:1209   */\n      tag_53\n        /* \"#utility.yul\":1202:1208   */\n      dup2\n        /* \"#utility.yul\":1197:1200   */\n      dup6\n        /* \"#utility.yul\":1138:1209   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1131:1209   */\n      swap4\n      pop\n        /* \"#utility.yul\":1218:1270   */\n      tag_55\n        /* \"#utility.yul\":1263:1269   */\n      dup2\n        /* \"#utility.yul\":1258:1261   */\n      dup6\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1244:1249   */\n      dup7\n        /* \"#utility.yul\":1240:1256   */\n      add\n        /* \"#utility.yul\":1218:1270   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1295:1324   */\n      tag_57\n        /* \"#utility.yul\":1317:1323   */\n      dup2\n        /* \"#utility.yul\":1295:1324   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1290:1293   */\n      dup5\n        /* \"#utility.yul\":1286:1325   */\n      add\n        /* \"#utility.yul\":1279:1325   */\n      swap2\n      pop\n        /* \"#utility.yul\":1059:1331   */\n      pop\n        /* \"#utility.yul\":967:1331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1337:1455   */\n    tag_59:\n        /* \"#utility.yul\":1424:1448   */\n      tag_61\n        /* \"#utility.yul\":1442:1447   */\n      dup2\n        /* \"#utility.yul\":1424:1448   */\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1419:1422   */\n      dup3\n        /* \"#utility.yul\":1412:1449   */\n      mstore\n        /* \"#utility.yul\":1337:1455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1573   */\n    tag_63:\n        /* \"#utility.yul\":1544:1566   */\n      tag_65\n        /* \"#utility.yul\":1560:1565   */\n      dup2\n        /* \"#utility.yul\":1544:1566   */\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1539:1542   */\n      dup3\n        /* \"#utility.yul\":1532:1567   */\n      mstore\n        /* \"#utility.yul\":1461:1573   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1579:1892   */\n    tag_12:\n        /* \"#utility.yul\":1692:1696   */\n      0x00\n        /* \"#utility.yul\":1730:1732   */\n      0x20\n        /* \"#utility.yul\":1719:1728   */\n      dup3\n        /* \"#utility.yul\":1715:1733   */\n      add\n        /* \"#utility.yul\":1707:1733   */\n      swap1\n      pop\n        /* \"#utility.yul\":1779:1788   */\n      dup2\n        /* \"#utility.yul\":1773:1777   */\n      dup2\n        /* \"#utility.yul\":1769:1789   */\n      sub\n        /* \"#utility.yul\":1765:1766   */\n      0x00\n        /* \"#utility.yul\":1754:1763   */\n      dup4\n        /* \"#utility.yul\":1750:1767   */\n      add\n        /* \"#utility.yul\":1743:1790   */\n      mstore\n        /* \"#utility.yul\":1807:1885   */\n      tag_68\n        /* \"#utility.yul\":1880:1884   */\n      dup2\n        /* \"#utility.yul\":1871:1877   */\n      dup5\n        /* \"#utility.yul\":1807:1885   */\n      tag_49\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1799:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1579:1892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1898:2120   */\n    tag_16:\n        /* \"#utility.yul\":1991:1995   */\n      0x00\n        /* \"#utility.yul\":2029:2031   */\n      0x20\n        /* \"#utility.yul\":2018:2027   */\n      dup3\n        /* \"#utility.yul\":2014:2032   */\n      add\n        /* \"#utility.yul\":2006:2032   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2113   */\n      tag_70\n        /* \"#utility.yul\":2110:2111   */\n      0x00\n        /* \"#utility.yul\":2099:2108   */\n      dup4\n        /* \"#utility.yul\":2095:2112   */\n      add\n        /* \"#utility.yul\":2086:2092   */\n      dup5\n        /* \"#utility.yul\":2042:2113   */\n      tag_59\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1898:2120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2340   */\n    tag_20:\n        /* \"#utility.yul\":2215:2219   */\n      0x00\n        /* \"#utility.yul\":2253:2255   */\n      0x20\n        /* \"#utility.yul\":2242:2251   */\n      dup3\n        /* \"#utility.yul\":2238:2256   */\n      add\n        /* \"#utility.yul\":2230:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2266:2333   */\n      tag_72\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2319:2328   */\n      dup4\n        /* \"#utility.yul\":2315:2332   */\n      add\n        /* \"#utility.yul\":2306:2312   */\n      dup5\n        /* \"#utility.yul\":2266:2333   */\n      tag_63\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2126:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2427:2526   */\n    tag_52:\n        /* \"#utility.yul\":2479:2485   */\n      0x00\n        /* \"#utility.yul\":2513:2518   */\n      dup2\n        /* \"#utility.yul\":2507:2519   */\n      mload\n        /* \"#utility.yul\":2497:2519   */\n      swap1\n      pop\n        /* \"#utility.yul\":2427:2526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2532:2701   */\n    tag_54:\n        /* \"#utility.yul\":2616:2627   */\n      0x00\n        /* \"#utility.yul\":2650:2656   */\n      dup3\n        /* \"#utility.yul\":2645:2648   */\n      dup3\n        /* \"#utility.yul\":2638:2657   */\n      mstore\n        /* \"#utility.yul\":2690:2694   */\n      0x20\n        /* \"#utility.yul\":2685:2688   */\n      dup3\n        /* \"#utility.yul\":2681:2695   */\n      add\n        /* \"#utility.yul\":2666:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2532:2701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2707:2803   */\n    tag_77:\n        /* \"#utility.yul\":2744:2751   */\n      0x00\n        /* \"#utility.yul\":2773:2797   */\n      tag_79\n        /* \"#utility.yul\":2791:2796   */\n      dup3\n        /* \"#utility.yul\":2773:2797   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2762:2797   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2809:2935   */\n    tag_80:\n        /* \"#utility.yul\":2846:2853   */\n      0x00\n        /* \"#utility.yul\":2886:2928   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2879:2884   */\n      dup3\n        /* \"#utility.yul\":2875:2929   */\n      and\n        /* \"#utility.yul\":2864:2929   */\n      swap1\n      pop\n        /* \"#utility.yul\":2809:2935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2941:3018   */\n    tag_62:\n        /* \"#utility.yul\":2978:2985   */\n      0x00\n        /* \"#utility.yul\":3007:3012   */\n      dup2\n        /* \"#utility.yul\":2996:3012   */\n      swap1\n      pop\n        /* \"#utility.yul\":2941:3018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3110   */\n    tag_66:\n        /* \"#utility.yul\":3059:3066   */\n      0x00\n        /* \"#utility.yul\":3099:3103   */\n      0xff\n        /* \"#utility.yul\":3092:3097   */\n      dup3\n        /* \"#utility.yul\":3088:3104   */\n      and\n        /* \"#utility.yul\":3077:3104   */\n      swap1\n      pop\n        /* \"#utility.yul\":3024:3110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3116:3423   */\n    tag_56:\n        /* \"#utility.yul\":3184:3185   */\n      0x00\n        /* \"#utility.yul\":3194:3307   */\n    tag_85:\n        /* \"#utility.yul\":3208:3214   */\n      dup4\n        /* \"#utility.yul\":3205:3206   */\n      dup2\n        /* \"#utility.yul\":3202:3215   */\n      lt\n        /* \"#utility.yul\":3194:3307   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3293:3294   */\n      dup1\n        /* \"#utility.yul\":3288:3291   */\n      dup3\n        /* \"#utility.yul\":3284:3295   */\n      add\n        /* \"#utility.yul\":3278:3296   */\n      mload\n        /* \"#utility.yul\":3274:3275   */\n      dup2\n        /* \"#utility.yul\":3269:3272   */\n      dup5\n        /* \"#utility.yul\":3265:3276   */\n      add\n        /* \"#utility.yul\":3258:3297   */\n      mstore\n        /* \"#utility.yul\":3230:3232   */\n      0x20\n        /* \"#utility.yul\":3227:3228   */\n      dup2\n        /* \"#utility.yul\":3223:3233   */\n      add\n        /* \"#utility.yul\":3218:3233   */\n      swap1\n      pop\n        /* \"#utility.yul\":3194:3307   */\n      jump(tag_85)\n    tag_87:\n        /* \"#utility.yul\":3325:3331   */\n      dup4\n        /* \"#utility.yul\":3322:3323   */\n      dup2\n        /* \"#utility.yul\":3319:3332   */\n      gt\n        /* \"#utility.yul\":3316:3417   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":3405:3406   */\n      0x00\n        /* \"#utility.yul\":3396:3402   */\n      dup5\n        /* \"#utility.yul\":3391:3394   */\n      dup5\n        /* \"#utility.yul\":3387:3403   */\n      add\n        /* \"#utility.yul\":3380:3407   */\n      mstore\n        /* \"#utility.yul\":3316:3417   */\n    tag_88:\n        /* \"#utility.yul\":3165:3423   */\n      pop\n        /* \"#utility.yul\":3116:3423   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3552:3669   */\n    tag_42:\n        /* \"#utility.yul\":3661:3662   */\n      0x00\n        /* \"#utility.yul\":3658:3659   */\n      dup1\n        /* \"#utility.yul\":3651:3663   */\n      revert\n        /* \"#utility.yul\":3675:3777   */\n    tag_58:\n        /* \"#utility.yul\":3716:3722   */\n      0x00\n        /* \"#utility.yul\":3767:3769   */\n      0x1f\n        /* \"#utility.yul\":3763:3770   */\n      not\n        /* \"#utility.yul\":3758:3760   */\n      0x1f\n        /* \"#utility.yul\":3751:3756   */\n      dup4\n        /* \"#utility.yul\":3747:3761   */\n      add\n        /* \"#utility.yul\":3743:3771   */\n      and\n        /* \"#utility.yul\":3733:3771   */\n      swap1\n      pop\n        /* \"#utility.yul\":3675:3777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:3905   */\n    tag_38:\n        /* \"#utility.yul\":3856:3880   */\n      tag_94\n        /* \"#utility.yul\":3874:3879   */\n      dup2\n        /* \"#utility.yul\":3856:3880   */\n      tag_77\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3849:3854   */\n      dup2\n        /* \"#utility.yul\":3846:3881   */\n      eq\n        /* \"#utility.yul\":3836:3899   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3895:3896   */\n      0x00\n        /* \"#utility.yul\":3892:3893   */\n      dup1\n        /* \"#utility.yul\":3885:3897   */\n      revert\n        /* \"#utility.yul\":3836:3899   */\n    tag_95:\n        /* \"#utility.yul\":3783:3905   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b668dd4dc30a354cb4cc5a2e9a022f3d5237abf4d4503e6678e39eb5b5dcd6c464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610425806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd14610085578063313ce567146100a357806370a08231146100c157806395d89b41146100f1578063dd62ed3e1461010f575b600080fd5b61006f61013f565b60405161007c91906102d2565b60405180910390f35b61008d610178565b60405161009a91906102f4565b60405180910390f35b6100ab61017e565b6040516100b8919061030f565b60405180910390f35b6100db60048036038101906100d6919061020e565b610183565b6040516100e891906102f4565b60405180910390f35b6100f961019b565b60405161010691906102d2565b60405180910390f35b6101296004803603810190610124919061023b565b6101d4565b60405161013691906102f4565b60405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60005481565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b6002602052816000526040600020602052806000526040600020600091509150505481565b600081359050610208816103d8565b92915050565b600060208284031215610224576102236103c2565b5b6000610232848285016101f9565b91505092915050565b60008060408385031215610252576102516103c2565b5b6000610260858286016101f9565b9250506020610271858286016101f9565b9150509250929050565b60006102868261032a565b6102908185610335565b93506102a081856020860161038f565b6102a9816103c7565b840191505092915050565b6102bd81610378565b82525050565b6102cc81610382565b82525050565b600060208201905081810360008301526102ec818461027b565b905092915050565b600060208201905061030960008301846102b4565b92915050565b600060208201905061032460008301846102c3565b92915050565b600081519050919050565b600082825260208201905092915050565b600061035182610358565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156103ad578082015181840152602081019050610392565b838111156103bc576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b6103e181610346565b81146103ec57600080fd5b5056fea2646970667358221220b668dd4dc30a354cb4cc5a2e9a022f3d5237abf4d4503e6678e39eb5b5dcd6c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x425 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x208 DUP2 PUSH2 0x3D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224 JUMPI PUSH2 0x223 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x232 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x252 JUMPI PUSH2 0x251 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x271 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP3 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x290 DUP2 DUP6 PUSH2 0x335 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x3C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BD DUP2 PUSH2 0x378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CC DUP2 PUSH2 0x382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC DUP2 DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x324 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP3 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x392 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH9 0xDD4DC30A354CB4CC5A 0x2E SWAP11 MUL 0x2F RETURNDATASIZE MSTORE CALLDATACOPY 0xAB DELEGATECALL 0xD4 POP RETURNDATACOPY PUSH7 0x78E39EB5B5DCD6 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "90:340:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowance_338": {
									"entryPoint": 468,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_332": {
									"entryPoint": 387,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_326": {
									"entryPoint": 382,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_320": {
									"entryPoint": 319,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_323": {
									"entryPoint": 411,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_328": {
									"entryPoint": 376,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3908:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "570:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "616:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "618:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "618:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "618:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "591:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "583:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:32:2"
															},
															"nodeType": "YulIf",
															"src": "580:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "709:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "724:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "738:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "728:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "753:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "788:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "799:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "784:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "808:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "753:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "836:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "851:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "855:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "532:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "543:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "555:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "563:6:2",
														"type": ""
													}
												],
												"src": "487:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1069:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1116:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1083:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1073:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1131:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1202:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1138:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1244:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1240:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1263:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1218:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1290:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1317:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1295:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1040:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1047:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1055:3:2",
														"type": ""
													}
												],
												"src": "967:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1402:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1419:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1442:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1424:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1412:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1412:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1390:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1397:3:2",
														"type": ""
													}
												],
												"src": "1337:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1522:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1539:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1560:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1544:15:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1544:22:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1532:35:2"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1510:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1517:3:2",
														"type": ""
													}
												],
												"src": "1461:112:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1697:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1707:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1719:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1707:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1754:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1765:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1750:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1750:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1773:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1779:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1769:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1743:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1799:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1871:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1880:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1807:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1799:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1669:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1681:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1692:4:2",
														"type": ""
													}
												],
												"src": "1579:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2006:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2018:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2006:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2086:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2099:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2095:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2095:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2042:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1968:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1980:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1991:4:2",
														"type": ""
													}
												],
												"src": "1898:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2220:120:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2230:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2242:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2238:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2230:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2330:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2315:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2266:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:67:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2266:67:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2192:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2204:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2215:4:2",
														"type": ""
													}
												],
												"src": "2126:214:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2396:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2412:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2406:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2379:6:2",
														"type": ""
													}
												],
												"src": "2346:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2497:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2513:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2507:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2469:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2479:6:2",
														"type": ""
													}
												],
												"src": "2427:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2628:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2645:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2650:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2638:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2666:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2685:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2666:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2600:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2605:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2616:11:2",
														"type": ""
													}
												],
												"src": "2532:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2762:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2791:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2773:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2762:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2734:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2744:7:2",
														"type": ""
													}
												],
												"src": "2707:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2864:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2879:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2875:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2864:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2836:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2846:7:2",
														"type": ""
													}
												],
												"src": "2809:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2996:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3007:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2996:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2968:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2978:7:2",
														"type": ""
													}
												],
												"src": "2941:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3067:43:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3077:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3092:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3099:4:2",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3088:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3088:16:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3077:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3049:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3059:7:2",
														"type": ""
													}
												],
												"src": "3024:86:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3165:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3175:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3184:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3179:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3244:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3269:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3274:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3265:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3265:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3288:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3293:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3284:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3284:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3278:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3278:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3258:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3258:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3205:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3208:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3202:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3216:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3218:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3227:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3223:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3218:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3198:3:2",
																"statements": []
															},
															"src": "3194:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3341:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3391:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3396:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3387:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3387:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3405:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3380:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3380:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3322:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3325:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3319:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:13:2"
															},
															"nodeType": "YulIf",
															"src": "3316:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3147:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3152:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3157:6:2",
														"type": ""
													}
												],
												"src": "3116:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3429:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3658:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3661:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3552:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3723:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3733:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3751:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3758:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3767:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3763:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3763:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3743:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3733:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3706:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3716:6:2",
														"type": ""
													}
												],
												"src": "3675:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3883:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3892:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3895:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3885:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3885:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3885:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3849:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3874:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3856:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3856:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3846:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3846:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:43:2"
															},
															"nodeType": "YulIf",
															"src": "3836:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3819:5:2",
														"type": ""
													}
												],
												"src": "3783:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd14610085578063313ce567146100a357806370a08231146100c157806395d89b41146100f1578063dd62ed3e1461010f575b600080fd5b61006f61013f565b60405161007c91906102d2565b60405180910390f35b61008d610178565b60405161009a91906102f4565b60405180910390f35b6100ab61017e565b6040516100b8919061030f565b60405180910390f35b6100db60048036038101906100d6919061020e565b610183565b6040516100e891906102f4565b60405180910390f35b6100f961019b565b60405161010691906102d2565b60405180910390f35b6101296004803603810190610124919061023b565b6101d4565b60405161013691906102f4565b60405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60005481565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b6002602052816000526040600020602052806000526040600020600091509150505481565b600081359050610208816103d8565b92915050565b600060208284031215610224576102236103c2565b5b6000610232848285016101f9565b91505092915050565b60008060408385031215610252576102516103c2565b5b6000610260858286016101f9565b9250506020610271858286016101f9565b9150509250929050565b60006102868261032a565b6102908185610335565b93506102a081856020860161038f565b6102a9816103c7565b840191505092915050565b6102bd81610378565b82525050565b6102cc81610382565b82525050565b600060208201905081810360008301526102ec818461027b565b905092915050565b600060208201905061030960008301846102b4565b92915050565b600060208201905061032460008301846102c3565b92915050565b600081519050919050565b600082825260208201905092915050565b600061035182610358565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156103ad578082015181840152602081019050610392565b838111156103bc576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b6103e181610346565b81146103ec57600080fd5b5056fea2646970667358221220b668dd4dc30a354cb4cc5a2e9a022f3d5237abf4d4503e6678e39eb5b5dcd6c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x13F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x20E JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x208 DUP2 PUSH2 0x3D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x224 JUMPI PUSH2 0x223 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x232 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x252 JUMPI PUSH2 0x251 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x260 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x271 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP3 PUSH2 0x32A JUMP JUMPDEST PUSH2 0x290 DUP2 DUP6 PUSH2 0x335 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x38F JUMP JUMPDEST PUSH2 0x2A9 DUP2 PUSH2 0x3C7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BD DUP2 PUSH2 0x378 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CC DUP2 PUSH2 0x382 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EC DUP2 DUP5 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x324 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x351 DUP3 PUSH2 0x358 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x392 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3BC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0x346 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH9 0xDD4DC30A354CB4CC5A 0x2E SWAP11 MUL 0x2F RETURNDATASIZE MSTORE CALLDATACOPY 0xAB DELEGATECALL 0xD4 POP RETURNDATACOPY PUSH7 0x78E39EB5B5DCD6 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "90:340:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;316:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:60;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;146:42;;;;;;;;;;;;;;;;;;;:::o;284:23::-;;;;:::o;242:35::-;275:2;242:35;:::o;316:41::-;;;;;;;;;;;;;;;;;:::o;195:40::-;;;;;;;;;;;;;;;;;;;:::o;364:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:474::-;555:6;563;612:2;600:9;591:7;587:23;583:32;580:119;;;618:79;;:::i;:::-;580:119;738:1;763:53;808:7;799:6;788:9;784:22;763:53;:::i;:::-;753:63;;709:117;865:2;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;836:118;487:474;;;;;:::o;967:364::-;1055:3;1083:39;1116:5;1083:39;:::i;:::-;1138:71;1202:6;1197:3;1138:71;:::i;:::-;1131:78;;1218:52;1263:6;1258:3;1251:4;1244:5;1240:16;1218:52;:::i;:::-;1295:29;1317:6;1295:29;:::i;:::-;1290:3;1286:39;1279:46;;1059:272;967:364;;;;:::o;1337:118::-;1424:24;1442:5;1424:24;:::i;:::-;1419:3;1412:37;1337:118;;:::o;1461:112::-;1544:22;1560:5;1544:22;:::i;:::-;1539:3;1532:35;1461:112;;:::o;1579:313::-;1692:4;1730:2;1719:9;1715:18;1707:26;;1779:9;1773:4;1769:20;1765:1;1754:9;1750:17;1743:47;1807:78;1880:4;1871:6;1807:78;:::i;:::-;1799:86;;1579:313;;;;:::o;1898:222::-;1991:4;2029:2;2018:9;2014:18;2006:26;;2042:71;2110:1;2099:9;2095:17;2086:6;2042:71;:::i;:::-;1898:222;;;;:::o;2126:214::-;2215:4;2253:2;2242:9;2238:18;2230:26;;2266:67;2330:1;2319:9;2315:17;2306:6;2266:67;:::i;:::-;2126:214;;;;:::o;2427:99::-;2479:6;2513:5;2507:12;2497:22;;2427:99;;;:::o;2532:169::-;2616:11;2650:6;2645:3;2638:19;2690:4;2685:3;2681:14;2666:29;;2532:169;;;;:::o;2707:96::-;2744:7;2773:24;2791:5;2773:24;:::i;:::-;2762:35;;2707:96;;;:::o;2809:126::-;2846:7;2886:42;2879:5;2875:54;2864:65;;2809:126;;;:::o;2941:77::-;2978:7;3007:5;2996:16;;2941:77;;;:::o;3024:86::-;3059:7;3099:4;3092:5;3088:16;3077:27;;3024:86;;;:::o;3116:307::-;3184:1;3194:113;3208:6;3205:1;3202:13;3194:113;;;3293:1;3288:3;3284:11;3278:18;3274:1;3269:3;3265:11;3258:39;3230:2;3227:1;3223:10;3218:15;;3194:113;;;3325:6;3322:1;3319:13;3316:101;;;3405:1;3396:6;3391:3;3387:16;3380:27;3316:101;3165:258;3116:307;;;:::o;3552:117::-;3661:1;3658;3651:12;3675:102;3716:6;3767:2;3763:7;3758:2;3751:5;3747:14;3743:28;3733:38;;3675:102;;;:::o;3783:122::-;3856:24;3874:5;3856:24;:::i;:::-;3849:5;3846:35;3836:63;;3895:1;3892;3885:12;3836:63;3783:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "212200",
								"executionCost": "257",
								"totalCost": "212457"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"balanceOf(address)": "2858",
								"decimals()": "357",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 90,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 90,
									"end": 430,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b668dd4dc30a354cb4cc5a2e9a022f3d5237abf4d4503e6678e39eb5b5dcd6c464736f6c63430008070033",
									".code": [
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "PUSH",
											"source": 1,
											"value": "45656C7377617020563200000000000000000000000000000000000000000000"
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 284,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 242,
											"end": 277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 242,
											"end": 277,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 316,
											"end": 357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "45454C2D56320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 195,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 569,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 609,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 591,
											"end": 598,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 587,
											"end": 610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 615,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 618,
											"end": 697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 580,
											"end": 699,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 580,
											"end": 699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 738,
											"end": 739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 808,
											"end": 815,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 784,
											"end": 806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 763,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 763,
											"end": 816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 753,
											"end": 816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 709,
											"end": 826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 954,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1083,
											"end": 1122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1083,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1209,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1263,
											"end": 1269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1249,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1218,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1295,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1295,
											"end": 1324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1295,
											"end": 1324,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1293,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1325,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1325,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 967,
											"end": 1331,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1337,
											"end": 1455,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1337,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1573,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1461,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1539,
											"end": 1542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1573,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1692,
											"end": 1696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1715,
											"end": 1733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1765,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1807,
											"end": 1885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1807,
											"end": 1885,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1807,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1799,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 1995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2018,
											"end": 2027,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2042,
											"end": 2113,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2113,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2042,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2120,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2219,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2230,
											"end": 2256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2266,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2266,
											"end": 2333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2266,
											"end": 2333,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2266,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2126,
											"end": 2340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2616,
											"end": 2627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2638,
											"end": 2657,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2681,
											"end": 2695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2532,
											"end": 2701,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2751,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2791,
											"end": 2796,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2773,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2803,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2928,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2929,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2864,
											"end": 2929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2935,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2941,
											"end": 3018,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3059,
											"end": 3066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3092,
											"end": 3097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3104,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3077,
											"end": 3104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3110,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3215,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3293,
											"end": 3294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3296,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3272,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3265,
											"end": 3276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3258,
											"end": 3297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3218,
											"end": 3233,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3194,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3331,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3417,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3316,
											"end": 3417,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3391,
											"end": 3394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3387,
											"end": 3403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3380,
											"end": 3407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3316,
											"end": 3417,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3316,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3423,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3651,
											"end": 3663,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3716,
											"end": 3722,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3769,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3763,
											"end": 3770,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3760,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3751,
											"end": 3756,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3777,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3783,
											"end": 3905,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3783,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3874,
											"end": 3879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3856,
											"end": 3880,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3856,
											"end": 3880,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3856,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3881,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3836,
											"end": 3899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3895,
											"end": 3896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3893,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3836,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3783,
											"end": 3905,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EelSwap.sol\":\"EelSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/EelSwap.sol\":{\"keccak256\":\"0x3aaebf47de259478845953544cf7f992fc84a512fa7f4b20ae297e9f63787232\",\"urls\":[\"bzz-raw://01ecbaa9133802f2d5e37fdbe2526a0b4f8ea8bd9098a74a5c06d0d09fe6f738\",\"dweb:/ipfs/QmWUHLChgzgqPxFNnW5ULUY21UxZs5XqKg66ivuXhN5RZd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 328,
								"contract": "contracts/EelSwap.sol:EelSwap",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "contracts/EelSwap.sol:EelSwap",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 338,
								"contract": "contracts/EelSwap.sol:EelSwap",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/EelSwap.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/EelSwap.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"contracts/EelSwap.sol": {
				"ast": {
					"absolutePath": "contracts/EelSwap.sol",
					"exportedSymbols": {
						"EelSwap": [
							339
						],
						"SafeMath": [
							311
						]
					},
					"id": 340,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 340,
							"sourceUnit": 312,
							"src": "27:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "EelSwap",
							"nameLocation": "99:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "120:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "114:24:1",
									"typeName": {
										"id": 316,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "133:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 320,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "169:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "146:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "146:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45656c73776170205632",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "176:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc7663cb79c4c2471f08ab33bcb482270aba9268f35513074a249ce070f952b9",
											"typeString": "literal_string \"Eelswap V2\""
										},
										"value": "Eelswap V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 323,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "218:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "195:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 321,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "195:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45454c2d5632",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "227:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_077f46f1268ccd289e7279c4fa37dc2a3caacd2560200f1a7ec776901ba8b108",
											"typeString": "literal_string \"EEL-V2\""
										},
										"value": "EEL-V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 326,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "264:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "242:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 324,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "242:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "275:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 328,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "296:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "284:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "284:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 332,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "348:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "316:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 331,
										"keyType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "324:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "316:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 330,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "335:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd62ed3e",
									"id": 338,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "415:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "364:60:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 337,
										"keyType": {
											"id": 333,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "372:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "364:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 336,
											"keyType": {
												"id": 334,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "391:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "383:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 335,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "402:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								}
							],
							"scope": 340,
							"src": "90:340:1",
							"usedErrors": []
						}
					],
					"src": "0:430:1"
				},
				"id": 1
			}
		}
	}
}