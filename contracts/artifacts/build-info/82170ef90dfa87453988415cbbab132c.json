{
	"id": "82170ef90dfa87453988415cbbab132c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EelswapFactory.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport './interfaces/IEelswapFactory.sol';\r\n\r\ncontract EelswapFactory is IEelswapFactory {\r\n    mapping(address => mapping(address => address)) public getPair;\r\n    address[] public allPairs;\r\n    address owner;\r\n\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function allPairsLength() external view returns (uint) {\r\n        return allPairs.length;\r\n    }\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\r\n        require(tokenA != tokenB, \"Identical Addresses\");\r\n        // This is done to ensure the tokens are in order\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        \r\n        require(token0 != address(0), \"Token should not be from zero address\");\r\n        require(getPair[token0][token1] == address(0), \"The pair already exists\");\r\n\r\n        // Create a pair contract\r\n    }\r\n}"
			},
			"contracts/interfaces/IEelswapFactory.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\ninterface IEelswapFactory{\r\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n    function getPair(address tokenA, address tokenB) external view returns (address pair) ;\r\n\r\n    function allPairs(uint) external view returns (address pair);\r\n\r\n    function allPairsLength() external view returns(uint);\r\n\r\n    function createPair(address tokenA, address tokenB) external returns (address pair);\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/EelswapFactory.sol": {
				"EelswapFactory": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/EelswapFactory.sol\":74:1035  contract EelswapFactory is IEelswapFactory {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/EelswapFactory.sol\":341:399  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/EelswapFactory.sol\":341:399  constructor() public {\r... */\n  pop\n    /* \"contracts/EelswapFactory.sol\":381:391  msg.sender */\n  caller\n    /* \"contracts/EelswapFactory.sol\":373:378  owner */\n  0x02\n  0x00\n    /* \"contracts/EelswapFactory.sol\":373:391  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/EelswapFactory.sol\":74:1035  contract EelswapFactory is IEelswapFactory {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EelswapFactory.sol\":74:1035  contract EelswapFactory is IEelswapFactory {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/EelswapFactory.sol\":74:1035  contract EelswapFactory is IEelswapFactory {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1e3dd18b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x574f2ba3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc9c65396\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe6a43905\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/EelswapFactory.sol\":193:218  address[] public allPairs */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"contracts/EelswapFactory.sol\":193:218  address[] public allPairs */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapFactory.sol\":407:503  function allPairsLength() external view returns (uint) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapFactory.sol\":511:1032  function createPair(address tokenA, address tokenB) external returns (address pair) {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"contracts/EelswapFactory.sol\":511:1032  function createPair(address tokenA, address tokenB) external returns (address pair) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapFactory.sol\":124:186  mapping(address => mapping(address => address)) public getPair */\n    tag_6:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/EelswapFactory.sol\":124:186  mapping(address => mapping(address => address)) public getPair */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapFactory.sol\":193:218  address[] public allPairs */\n    tag_9:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapFactory.sol\":407:503  function allPairsLength() external view returns (uint) {\r... */\n    tag_11:\n        /* \"contracts/EelswapFactory.sol\":456:460  uint */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":480:488  allPairs */\n      0x01\n        /* \"contracts/EelswapFactory.sol\":480:495  allPairs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/EelswapFactory.sol\":473:495  return allPairs.length */\n      swap1\n      pop\n        /* \"contracts/EelswapFactory.sol\":407:503  function allPairsLength() external view returns (uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/EelswapFactory.sol\":511:1032  function createPair(address tokenA, address tokenB) external returns (address pair) {\r... */\n    tag_14:\n        /* \"contracts/EelswapFactory.sol\":581:593  address pair */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":624:630  tokenB */\n      dup2\n        /* \"contracts/EelswapFactory.sol\":614:630  tokenA != tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapFactory.sol\":614:620  tokenA */\n      dup4\n        /* \"contracts/EelswapFactory.sol\":614:630  tokenA != tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EelswapFactory.sol\":606:654  require(tokenA != tokenB, \"Identical Addresses\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4964656e746963616c2041646472657373657300000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/EelswapFactory.sol\":725:739  address token0 */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":741:755  address token1 */\n      dup1\n        /* \"contracts/EelswapFactory.sol\":768:774  tokenB */\n      dup4\n        /* \"contracts/EelswapFactory.sol\":759:774  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapFactory.sol\":759:765  tokenA */\n      dup6\n        /* \"contracts/EelswapFactory.sol\":759:774  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/EelswapFactory.sol\":759:812  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      tag_23\n      jumpi\n        /* \"contracts/EelswapFactory.sol\":797:803  tokenB */\n      dup4\n        /* \"contracts/EelswapFactory.sol\":805:811  tokenA */\n      dup6\n        /* \"contracts/EelswapFactory.sol\":759:812  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      jump(tag_24)\n    tag_23:\n        /* \"contracts/EelswapFactory.sol\":778:784  tokenA */\n      dup5\n        /* \"contracts/EelswapFactory.sol\":786:792  tokenB */\n      dup5\n        /* \"contracts/EelswapFactory.sol\":759:812  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n    tag_24:\n        /* \"contracts/EelswapFactory.sol\":724:812  (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/EelswapFactory.sol\":859:860  0 */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":841:861  token0 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapFactory.sol\":841:847  token0 */\n      dup3\n        /* \"contracts/EelswapFactory.sol\":841:861  token0 != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EelswapFactory.sol\":833:903  require(token0 != address(0), \"Token should not be from zero address\") */\n      tag_25\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8ae063d71627f691aabbf91a5cf80daf042e457e318f080bc5057db06d4a46d3\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_25:\n        /* \"contracts/EelswapFactory.sol\":957:958  0 */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":922:959  getPair[token0][token1] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapFactory.sol\":922:929  getPair */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":922:937  getPair[token0] */\n      dup1\n        /* \"contracts/EelswapFactory.sol\":930:936  token0 */\n      dup5\n        /* \"contracts/EelswapFactory.sol\":922:937  getPair[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapFactory.sol\":922:945  getPair[token0][token1] */\n      0x00\n        /* \"contracts/EelswapFactory.sol\":938:944  token1 */\n      dup4\n        /* \"contracts/EelswapFactory.sol\":922:945  getPair[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapFactory.sol\":922:959  getPair[token0][token1] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EelswapFactory.sol\":914:987  require(getPair[token0][token1] == address(0), \"The pair already exists\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x17\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546865207061697220616c726561647920657869737473000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"contracts/EelswapFactory.sol\":511:1032  function createPair(address tokenA, address tokenB) external returns (address pair) {\r... */\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapFactory.sol\":124:186  mapping(address => mapping(address => address)) public getPair */\n    tag_17:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n    stop\n    data_8ae063d71627f691aabbf91a5cf80daf042e457e318f080bc5057db06d4a46d3 546f6b656e2073686f756c64206e6f742062652066726f6d207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a7231582056caab257bebb20d7e6c0bf7bb83b71037e558dbb48eb322d884a76875f424d164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105bd806100616000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631e3dd18b14610051578063574f2ba3146100bf578063c9c65396146100dd578063e6a4390514610181575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610225565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c7610261565b6040518082815260200191505060405180910390f35b61013f600480360360408110156100f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061026e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e36004803603604081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610521565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001818154811061023257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4964656e746963616c204164647265737365730000000000000000000000000081525060200191505060405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061034f578385610352565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806105646025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546865207061697220616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b505092915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe546f6b656e2073686f756c64206e6f742062652066726f6d207a65726f2061646472657373a265627a7a7231582056caab257bebb20d7e6c0bf7bb83b71037e558dbb48eb322d884a76875f424d164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5BD DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x181 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x232 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4964656E746963616C2041646472657373657300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x34F JUMPI DUP4 DUP6 PUSH2 0x352 JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x564 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546865207061697220616C726561647920657869737473000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID SLOAD PUSH16 0x6B656E2073686F756C64206E6F742062 PUSH6 0x2066726F6D20 PUSH27 0x65726F2061646472657373A265627A7A7231582056CAAB257BEBB2 0xD PUSH31 0x6C0BF7BB83B71037E558DBB48EB322D884A76875F424D164736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "74:961:0:-;;;341:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:58:0;381:10;373:5;;:18;;;;;;;;;;;;;;;;;;74:961;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631e3dd18b14610051578063574f2ba3146100bf578063c9c65396146100dd578063e6a4390514610181575b600080fd5b61007d6004803603602081101561006757600080fd5b8101908080359060200190929190505050610225565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100c7610261565b6040518082815260200191505060405180910390f35b61013f600480360360408110156100f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061026e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101e36004803603604081101561019757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610521565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6001818154811061023257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600180549050905090565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4964656e746963616c204164647265737365730000000000000000000000000081525060200191505060405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061034f578385610352565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806105646025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546865207061697220616c72656164792065786973747300000000000000000081525060200191505060405180910390fd5b505092915050565b60006020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fe546f6b656e2073686f756c64206e6f742062652066726f6d207a65726f2061646472657373a265627a7a7231582056caab257bebb20d7e6c0bf7bb83b71037e558dbb48eb322d884a76875f424d164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1E3DD18B EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x574F2BA3 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xC9C65396 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xE6A43905 EQ PUSH2 0x181 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x232 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4964656E746963616C2041646472657373657300000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x34F JUMPI DUP4 DUP6 PUSH2 0x352 JUMP JUMPDEST DUP5 DUP5 JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x564 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546865207061697220616C726561647920657869737473000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID SLOAD PUSH16 0x6B656E2073686F756C64206E6F742062 PUSH6 0x2066726F6D20 PUSH27 0x65726F2061646472657373A265627A7A7231582056CAAB257BEBB2 0xD PUSH31 0x6C0BF7BB83B71037E558DBB48EB322D884A76875F424D164736F6C63430005 GT STOP ORIGIN ",
							"sourceMap": "74:961:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;74:961:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;193:25;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;193:25:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;407:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;511:521;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;511:521:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;124:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;124:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;193:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;407:96::-;456:4;480:8;:15;;;;473:22;;407:96;:::o;511:521::-;581:12;624:6;614:16;;:6;:16;;;;606:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;725:14;741;768:6;759:15;;:6;:15;;;:53;;797:6;805;759:53;;;778:6;786;759:53;724:88;;;;859:1;841:20;;:6;:20;;;;833:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:1;922:37;;:7;:15;930:6;922:15;;;;;;;;;;;;;;;:23;938:6;922:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;914:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:521;;;;;;:::o;124:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "293800",
								"executionCost": "21197",
								"totalCost": "314997"
							},
							"external": {
								"allPairs(uint256)": "1995",
								"allPairsLength()": "1021",
								"createPair(address,address)": "infinite",
								"getPair(address,address)": "1354"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "MSTORE"
								},
								{
									"begin": 341,
									"end": 399,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 341,
									"end": 399,
									"name": "POP"
								},
								{
									"begin": 381,
									"end": 391,
									"name": "CALLER"
								},
								{
									"begin": 373,
									"end": 378,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 373,
									"end": 378,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "EXP"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "SLOAD"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "MUL"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "NOT"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "AND"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "DUP4"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "AND"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "MUL"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "OR"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "SSTORE"
								},
								{
									"begin": 373,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "DUP1"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "CODECOPY"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1035,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582056caab257bebb20d7e6c0bf7bb83b71037e558dbb48eb322d884a76875f424d164736f6c63430005110032",
									".code": [
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "MSTORE"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "POP"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "LT"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPI"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "SHR"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "1E3DD18B"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "EQ"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPI"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "574F2BA3"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "EQ"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPI"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "C9C65396"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "EQ"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPI"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "E6A43905"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "EQ"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPI"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "JUMPDEST"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "DUP1"
										},
										{
											"begin": 74,
											"end": 1035,
											"name": "REVERT"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP3"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP3"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "MLOAD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SUB"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "RETURN"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "DUP3"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "MSTORE"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "MLOAD"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "SWAP2"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "SUB"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "RETURN"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP3"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP3"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "MLOAD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP3"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "AND"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "MSTORE"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "MLOAD"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SUB"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP1"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "RETURN"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP3"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP3"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP3"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "ADD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SUB"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "RETURN"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SLOAD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "LT"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMPI"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "INVALID"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMPDEST"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "MSTORE"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "KECCAK256"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "POP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SLOAD"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "EXP"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "SWAP1"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DIV"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "AND"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "DUP2"
										},
										{
											"begin": 193,
											"end": 218,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "JUMPDEST"
										},
										{
											"begin": 456,
											"end": 460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 480,
											"end": 488,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 480,
											"end": 495,
											"name": "DUP1"
										},
										{
											"begin": 480,
											"end": 495,
											"name": "SLOAD"
										},
										{
											"begin": 480,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 480,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 473,
											"end": 495,
											"name": "SWAP1"
										},
										{
											"begin": 473,
											"end": 495,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "SWAP1"
										},
										{
											"begin": 407,
											"end": 503,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "JUMPDEST"
										},
										{
											"begin": 581,
											"end": 593,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 620,
											"name": "DUP4"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "EQ"
										},
										{
											"begin": 614,
											"end": 630,
											"name": "ISZERO"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "JUMPI"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MLOAD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MSTORE"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP3"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SUB"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP3"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MSTORE"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MSTORE"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "4964656E746963616C2041646472657373657300000000000000000000000000"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MSTORE"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "ADD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "POP"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "MLOAD"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "DUP1"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SWAP2"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SUB"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "SWAP1"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "REVERT"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 606,
											"end": 654,
											"name": "JUMPDEST"
										},
										{
											"begin": 725,
											"end": 739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 741,
											"end": 755,
											"name": "DUP1"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP4"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 765,
											"name": "DUP6"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 774,
											"name": "LT"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMPI"
										},
										{
											"begin": 797,
											"end": 803,
											"name": "DUP4"
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP6"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMP"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMPDEST"
										},
										{
											"begin": 778,
											"end": 784,
											"name": "DUP5"
										},
										{
											"begin": 786,
											"end": 792,
											"name": "DUP5"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 759,
											"end": 812,
											"name": "JUMPDEST"
										},
										{
											"begin": 724,
											"end": 812,
											"name": "SWAP2"
										},
										{
											"begin": 724,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 724,
											"end": 812,
											"name": "SWAP2"
										},
										{
											"begin": 724,
											"end": 812,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 841,
											"end": 847,
											"name": "DUP3"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "AND"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "EQ"
										},
										{
											"begin": 841,
											"end": 861,
											"name": "ISZERO"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "JUMPI"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "MSTORE"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP3"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SUB"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP3"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "MSTORE"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "MSTORE"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH data",
											"value": "8AE063D71627F691AABBF91A5CF80DAF042E457E318F080BC5057DB06D4A46D3"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "CODECOPY"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "ADD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "MLOAD"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "DUP1"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SUB"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "SWAP1"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "REVERT"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 833,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 957,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP1"
										},
										{
											"begin": 930,
											"end": 936,
											"name": "DUP5"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "KECCAK256"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP4"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "KECCAK256"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "SLOAD"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "EXP"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "DIV"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 945,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 959,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 959,
											"name": "EQ"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "JUMPI"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MLOAD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MSTORE"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "ADD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "ADD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP3"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SUB"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP3"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MSTORE"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "17"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MSTORE"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "ADD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "546865207061697220616C726561647920657869737473000000000000000000"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MSTORE"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "POP"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "ADD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SWAP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "POP"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "POP"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "MLOAD"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SWAP2"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SUB"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "SWAP1"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "REVERT"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 914,
											"end": 987,
											"name": "JUMPDEST"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP3"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 511,
											"end": 1032,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "JUMPDEST"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "KECCAK256"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "KECCAK256"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "POP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SLOAD"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "EXP"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "SWAP1"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DIV"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "AND"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "DUP2"
										},
										{
											"begin": 124,
											"end": 186,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"8AE063D71627F691AABBF91A5CF80DAF042E457E318F080BC5057DB06D4A46D3": "546f6b656e2073686f756c64206e6f742062652066726f6d207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/EelswapFactory.sol\":\"EelswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EelswapFactory.sol\":{\"keccak256\":\"0x46fde737f60567cd7c9d8a6722bb0599f8a07b1af750e1322f86448f2c90aaa9\",\"urls\":[\"bzz-raw://8abf696e4a9c1955d1232ba4c88e89197d1dadd28e7ba67bc64024666b7b0b61\",\"dweb:/ipfs/QmaUn4C6ym4Ke7816759n2kd95ThGktF94MyazjZM2mPQN\"]},\"contracts/interfaces/IEelswapFactory.sol\":{\"keccak256\":\"0xc4877c55a228cd6114b88e75e611afeb9c64ef06fdc932aa9bfa5734561fe062\",\"urls\":[\"bzz-raw://1e1122ae94005a9e92f09e3bb218ca5c6c5958f66acb63e755ebbcd6cdacdecf\",\"dweb:/ipfs/QmZsh6HEkaE9Cy3peodgLcZnLueyMa429uQEvJCfNX2Arb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/EelswapFactory.sol:EelswapFactory",
								"label": "getPair",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_address))"
							},
							{
								"astId": 13,
								"contract": "contracts/EelswapFactory.sol:EelswapFactory",
								"label": "allPairs",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 15,
								"contract": "contracts/EelswapFactory.sol:EelswapFactory",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_mapping(t_address,t_address))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_address)"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IEelswapFactory.sol": {
				"IEelswapFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"getPair(address,address)": "e6a43905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEelswapFactory.sol\":\"IEelswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IEelswapFactory.sol\":{\"keccak256\":\"0xc4877c55a228cd6114b88e75e611afeb9c64ef06fdc932aa9bfa5734561fe062\",\"urls\":[\"bzz-raw://1e1122ae94005a9e92f09e3bb218ca5c6c5958f66acb63e755ebbcd6cdacdecf\",\"dweb:/ipfs/QmZsh6HEkaE9Cy3peodgLcZnLueyMa429uQEvJCfNX2Arb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/EelswapFactory.sol:20:75: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\r\n                                                                          ^----------^\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 593,
					"file": "contracts/EelswapFactory.sol",
					"start": 581
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/EelswapFactory.sol": {
				"ast": {
					"absolutePath": "contracts/EelswapFactory.sol",
					"exportedSymbols": {
						"EelswapFactory": [
							98
						]
					},
					"id": 99,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "contracts/interfaces/IEelswapFactory.sol",
							"file": "./interfaces/IEelswapFactory.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 142,
							"src": "28:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "IEelswapFactory",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 141,
										"src": "101:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEelswapFactory_$141",
											"typeString": "contract IEelswapFactory"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "101:15:0"
								}
							],
							"contractDependencies": [
								141
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98,
								141
							],
							"name": "EelswapFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"name": "getPair",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "124:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
										"typeString": "mapping(address => mapping(address => address))"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "132:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "124:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
											"typeString": "mapping(address => mapping(address => address))"
										},
										"valueType": {
											"id": 8,
											"keyType": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "151:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "143:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
												"typeString": "mapping(address => address)"
											},
											"valueType": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "162:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "allPairs",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "193:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "193:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 12,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "193:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "225:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 14,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "225:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 25,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "265:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "289:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "313:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "264:68:0"
									},
									"src": "247:86:0"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "362:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "373:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "381:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "381:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "373:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "373:18:0"
											}
										]
									},
									"documentation": null,
									"id": 34,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:0"
									},
									"scope": 98,
									"src": "341:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "462:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 39,
														"name": "allPairs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "480:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "480:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 38,
												"id": 41,
												"nodeType": "Return",
												"src": "473:22:0"
											}
										]
									},
									"documentation": null,
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "430:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "456:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "455:6:0"
									},
									"scope": 98,
									"src": "407:96:0",
									"stateMutability": "view",
									"superFunction": 131,
									"visibility": "external"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "595:437:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "614:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "624:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "614:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4964656e746963616c20416464726573736573",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "632:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_152e9f1911aea981402c0730846ca59e9e75c846fa60fb5c5ce2a982885f6bb5",
																"typeString": "literal_string \"Identical Addresses\""
															},
															"value": "Identical Addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_152e9f1911aea981402c0730846ca59e9e75c846fa60fb5c5ce2a982885f6bb5",
																"typeString": "literal_string \"Identical Addresses\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															159,
															160
														],
														"referencedDeclaration": 160,
														"src": "606:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "606:48:0"
											},
											{
												"assignments": [
													60,
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "725:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 59,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "725:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 62,
														"name": "token1",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "741:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 61,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "741:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 73,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 63,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "759:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 64,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "759:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 69,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "797:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 70,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "805:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 71,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "796:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "759:53:0",
													"trueExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"id": 66,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"argumentTypes": null,
																"id": 67,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "786:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 68,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "777:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "724:88:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "841:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "859:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "851:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "851:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "841:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6b656e2073686f756c64206e6f742062652066726f6d207a65726f2061646472657373",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "863:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ae063d71627f691aabbf91a5cf80daf042e457e318f080bc5057db06d4a46d3",
																"typeString": "literal_string \"Token should not be from zero address\""
															},
															"value": "Token should not be from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ae063d71627f691aabbf91a5cf80daf042e457e318f080bc5057db06d4a46d3",
																"typeString": "literal_string \"Token should not be from zero address\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															159,
															160
														],
														"referencedDeclaration": 160,
														"src": "833:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "833:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "833:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 84,
																		"name": "getPair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "922:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
																			"typeString": "mapping(address => mapping(address => address))"
																		}
																	},
																	"id": 86,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 85,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "930:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "922:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 88,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 87,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "938:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "922:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "957:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "949:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "949:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "922:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865207061697220616c726561647920657869737473",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:25:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bb850110a04d50438801714dc82a836b5e045cddaac01dd4ca4f97e6196004a",
																"typeString": "literal_string \"The pair already exists\""
															},
															"value": "The pair already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bb850110a04d50438801714dc82a836b5e045cddaac01dd4ca4f97e6196004a",
																"typeString": "literal_string \"The pair already exists\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															159,
															160
														],
														"referencedDeclaration": 160,
														"src": "914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "914:73:0"
											}
										]
									},
									"documentation": null,
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "531:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:32:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "580:14:0"
									},
									"scope": 98,
									"src": "511:521:0",
									"stateMutability": "nonpayable",
									"superFunction": 140,
									"visibility": "external"
								}
							],
							"scope": 99,
							"src": "74:961:0"
						}
					],
					"src": "0:1035:0"
				},
				"id": 0
			},
			"contracts/interfaces/IEelswapFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IEelswapFactory.sol",
					"exportedSymbols": {
						"IEelswapFactory": [
							141
						]
					},
					"id": 142,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 100,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 141,
							"linearizedBaseContracts": [
								141
							],
							"name": "IEelswapFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 110,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"indexed": true,
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "78:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "102:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": false,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "126:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "140:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "77:68:1"
									},
									"src": "60:86:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "171:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "187:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "170:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "226:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "225:14:1"
									},
									"scope": 141,
									"src": "154:87:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "266:6:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "296:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "295:14:1"
									},
									"scope": 141,
									"src": "249:61:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:6:1"
									},
									"scope": 141,
									"src": "318:54:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "400:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "416:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "399:32:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "450:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:14:1"
									},
									"scope": 141,
									"src": "380:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 142,
							"src": "28:441:1"
						}
					],
					"src": "0:469:1"
				},
				"id": 1
			}
		}
	}
}