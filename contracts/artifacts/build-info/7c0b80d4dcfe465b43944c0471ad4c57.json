{
	"id": "7c0b80d4dcfe465b43944c0471ad4c57",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EelswapERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.16;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport \"./interfaces/IEelswapERC20.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\ncontract EelswapERC20 is IEelswapERC20{\r\n    using SafeMath for uint;\r\n\r\n    string public constant name = 'Eelswap V2';\r\n    string public constant symbol = 'EEL-V2';\r\n    uint8 public constant decimals = 18;\r\n    uint public totalSupply;\r\n\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(address => mapping(address => uint))public allowance;\r\n\r\n    // event Approval(address indexed owner, address indexed spender, uint value);\r\n    // event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function _mint(address to, uint value) internal {\r\n        totalSupply = totalSupply.add(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(address(0), to, value);\r\n    }\r\n\r\n    function _burn(address from, uint value) internal {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        totalSupply = totalSupply.sub(value);\r\n        emit Transfer(address(from), address(0), value);\r\n    }   \r\n\r\n    function _approve(address owner, address spender, uint value) private {\r\n        allowance[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    function _transfer(address from, address to, uint value) private {\r\n        balanceOf[from] = balanceOf[from].sub(value);\r\n        balanceOf[to] = balanceOf[to].add(value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    function approve(address spender, uint value) external returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transfer(address to, uint value) external returns (bool) {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint value) external returns (bool) {\r\n        // uint(-1) converts the value to the max uint value\r\n        if (allowance[from][msg.sender] != uint(-1)) {\r\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\r\n        }\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\r\n\r\nlibrary SafeMath {\r\n    function add(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x + y) >= x, 'ds-math-add-overflow');\r\n    }\r\n\r\n    function sub(uint x, uint y) internal pure returns (uint z) {\r\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\r\n    }\r\n\r\n    function mul(uint x, uint y) internal pure returns (uint z) {\r\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\r\n    }\r\n}"
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.16;\r\n\r\ninterface IEelswapERC20 {\r\n    event Approval(address indexed owner, address indexed spender, uint value);\r\n    event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n    function name() external pure returns (string memory);\r\n    function symbol() external pure returns(string memory);\r\n    function decimals() external pure returns (uint8);\r\n    function totalSupply() external view returns (uint);\r\n    function balanceOf(address owner) external view returns (uint);\r\n    function allowance(address owner, address spender) external view returns (uint);\r\n\r\n    function approve(address spender, uint value) external returns (bool);\r\n    function transfer(address to, uint value) external returns (bool);\r\n    function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/EelswapERC20.sol": {
				"EelswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/EelswapERC20.sol\":155:2194  contract EelswapERC20 is IEelswapERC20{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/EelswapERC20.sol\":155:2194  contract EelswapERC20 is IEelswapERC20{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EelswapERC20.sol\":155:2194  contract EelswapERC20 is IEelswapERC20{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/EelswapERC20.sol\":155:2194  contract EelswapERC20 is IEelswapERC20{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/EelswapERC20.sol\":232:274  string public constant name = 'Eelswap V2' */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_15:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_15)\n    tag_17:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/EelswapERC20.sol\":232:274  string public constant name = 'Eelswap V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1526:1673  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"contracts/EelswapERC20.sol\":1526:1673  function approve(address spender, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":370:393  uint public totalSupply */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1828:2191  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/EelswapERC20.sol\":1828:2191  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":328:363  uint8 public constant decimals = 18 */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":402:443  mapping(address => uint) public balanceOf */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"contracts/EelswapERC20.sol\":402:443  mapping(address => uint) public balanceOf */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":281:321  string public constant symbol = 'EEL-V2' */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_34:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_34)\n    tag_36:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/EelswapERC20.sol\":281:321  string public constant symbol = 'EEL-V2' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":1681:1820  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"contracts/EelswapERC20.sol\":1681:1820  function transfer(address to, uint value) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":450:510  mapping(address => mapping(address => uint))public allowance */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/EelswapERC20.sol\":450:510  mapping(address => mapping(address => uint))public allowance */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EelswapERC20.sol\":232:274  string public constant name = 'Eelswap V2' */\n    tag_14:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x45656c7377617020563200000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1526:1673  function approve(address spender, uint value) external returns (bool) {\r... */\n    tag_21:\n        /* \"contracts/EelswapERC20.sol\":1590:1594  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1607:1643  _approve(msg.sender, spender, value) */\n      tag_45\n        /* \"contracts/EelswapERC20.sol\":1616:1626  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":1628:1635  spender */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1637:1642  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1607:1615  _approve */\n      tag_46\n        /* \"contracts/EelswapERC20.sol\":1607:1643  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/EelswapERC20.sol\":1661:1665  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1654:1665  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1526:1673  function approve(address spender, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":370:393  uint public totalSupply */\n    tag_23:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1828:2191  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n    tag_26:\n        /* \"contracts/EelswapERC20.sol\":1906:1910  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2025:2027  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/EelswapERC20.sol\":1989:1998  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":1989:2004  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1999:2003  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":1989:2004  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1989:2016  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2005:2015  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":1989:2016  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":1989:2028  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/EelswapERC20.sol\":1985:2125  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n      tag_48\n      jumpi\n        /* \"contracts/EelswapERC20.sol\":2075:2113  allowance[from][msg.sender].sub(value) */\n      tag_49\n        /* \"contracts/EelswapERC20.sol\":2107:2112  value */\n      dup3\n        /* \"contracts/EelswapERC20.sol\":2075:2084  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":2075:2090  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2085:2089  from */\n      dup8\n        /* \"contracts/EelswapERC20.sol\":2075:2090  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2075:2102  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2091:2101  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":2075:2102  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":2075:2106  allowance[from][msg.sender].sub */\n      tag_50\n      swap1\n        /* \"contracts/EelswapERC20.sol\":2075:2113  allowance[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_49:\n        /* \"contracts/EelswapERC20.sol\":2045:2054  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":2045:2060  allowance[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2055:2059  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":2045:2060  allowance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2045:2072  allowance[from][msg.sender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":2061:2071  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":2045:2072  allowance[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":2045:2113  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1985:2125  if (allowance[from][msg.sender] != uint(-1)) {\r... */\n    tag_48:\n        /* \"contracts/EelswapERC20.sol\":2135:2161  _transfer(from, to, value) */\n      tag_51\n        /* \"contracts/EelswapERC20.sol\":2145:2149  from */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2151:2153  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2155:2160  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":2135:2144  _transfer */\n      tag_52\n        /* \"contracts/EelswapERC20.sol\":2135:2161  _transfer(from, to, value) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/EelswapERC20.sol\":2179:2183  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":2172:2183  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1828:2191  function transferFrom(address from, address to, uint value) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":328:363  uint8 public constant decimals = 18 */\n    tag_28:\n        /* \"contracts/EelswapERC20.sol\":361:363  18 */\n      0x12\n        /* \"contracts/EelswapERC20.sol\":328:363  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":402:443  mapping(address => uint) public balanceOf */\n    tag_31:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":281:321  string public constant symbol = 'EEL-V2' */\n    tag_33:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x45454c2d56320000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1681:1820  function transfer(address to, uint value) external returns (bool) {\r... */\n    tag_40:\n        /* \"contracts/EelswapERC20.sol\":1741:1745  bool */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1758:1790  _transfer(msg.sender, to, value) */\n      tag_54\n        /* \"contracts/EelswapERC20.sol\":1768:1778  msg.sender */\n      caller\n        /* \"contracts/EelswapERC20.sol\":1780:1782  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1784:1789  value */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1758:1767  _transfer */\n      tag_52\n        /* \"contracts/EelswapERC20.sol\":1758:1790  _transfer(msg.sender, to, value) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/EelswapERC20.sol\":1808:1812  true */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1801:1812  return true */\n      swap1\n      pop\n        /* \"contracts/EelswapERC20.sol\":1681:1820  function transfer(address to, uint value) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":450:510  mapping(address => mapping(address => uint))public allowance */\n    tag_43:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1121:1290  function _approve(address owner, address spender, uint value) private {\r... */\n    tag_46:\n        /* \"contracts/EelswapERC20.sol\":1230:1235  value */\n      dup1\n        /* \"contracts/EelswapERC20.sol\":1202:1211  allowance */\n      0x02\n        /* \"contracts/EelswapERC20.sol\":1202:1218  allowance[owner] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1212:1217  owner */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1202:1218  allowance[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1202:1227  allowance[owner][spender] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1219:1226  spender */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1202:1227  allowance[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1202:1235  allowance[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1267:1274  spender */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1251:1282  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapERC20.sol\":1260:1265  owner */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1251:1282  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/EelswapERC20.sol\":1276:1281  value */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1251:1282  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EelswapERC20.sol\":1121:1290  function _approve(address owner, address spender, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_50:\n        /* \"contracts/libraries/SafeMath.sol\":348:354  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":390:391  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":384:385  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":380:381  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":380:385  x - y */\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":376:385  z = x - y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":375:391  (z = x - y) <= x */\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":367:417  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d7375622d756e646572666c6f770000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/libraries/SafeMath.sol\":296:425  function sub(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EelswapERC20.sol\":1298:1518  function _transfer(address from, address to, uint value) private {\r... */\n    tag_52:\n        /* \"contracts/EelswapERC20.sol\":1392:1418  balanceOf[from].sub(value) */\n      tag_59\n        /* \"contracts/EelswapERC20.sol\":1412:1417  value */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1392:1401  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1392:1407  balanceOf[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1402:1406  from */\n      dup7\n        /* \"contracts/EelswapERC20.sol\":1392:1407  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":1392:1411  balanceOf[from].sub */\n      tag_50\n      swap1\n        /* \"contracts/EelswapERC20.sol\":1392:1418  balanceOf[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/EelswapERC20.sol\":1374:1383  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1374:1389  balanceOf[from] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1384:1388  from */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1374:1389  balanceOf[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1374:1418  balanceOf[from] = balanceOf[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1445:1469  balanceOf[to].add(value) */\n      tag_60\n        /* \"contracts/EelswapERC20.sol\":1463:1468  value */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1445:1454  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1445:1458  balanceOf[to] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1455:1457  to */\n      dup6\n        /* \"contracts/EelswapERC20.sol\":1445:1458  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EelswapERC20.sol\":1445:1462  balanceOf[to].add */\n      tag_61\n      swap1\n        /* \"contracts/EelswapERC20.sol\":1445:1469  balanceOf[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"contracts/EelswapERC20.sol\":1429:1438  balanceOf */\n      0x01\n        /* \"contracts/EelswapERC20.sol\":1429:1442  balanceOf[to] */\n      0x00\n        /* \"contracts/EelswapERC20.sol\":1439:1441  to */\n      dup5\n        /* \"contracts/EelswapERC20.sol\":1429:1442  balanceOf[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EelswapERC20.sol\":1429:1469  balanceOf[to] = balanceOf[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EelswapERC20.sol\":1500:1502  to */\n      dup2\n        /* \"contracts/EelswapERC20.sol\":1485:1510  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EelswapERC20.sol\":1494:1498  from */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1485:1510  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/EelswapERC20.sol\":1504:1509  value */\n      dup4\n        /* \"contracts/EelswapERC20.sol\":1485:1510  Transfer(from, to, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EelswapERC20.sol\":1298:1518  function _transfer(address from, address to, uint value) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n    tag_61:\n        /* \"contracts/libraries/SafeMath.sol\":212:218  uint z */\n      0x00\n        /* \"contracts/libraries/SafeMath.sol\":254:255  x */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":248:249  y */\n      dup3\n        /* \"contracts/libraries/SafeMath.sol\":244:245  x */\n      dup5\n        /* \"contracts/libraries/SafeMath.sol\":244:249  x + y */\n      add\n        /* \"contracts/libraries/SafeMath.sol\":240:249  z = x + y */\n      swap2\n      pop\n      dup2\n        /* \"contracts/libraries/SafeMath.sol\":239:255  (z = x + y) >= x */\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":231:280  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/libraries/SafeMath.sol\":160:288  function add(uint x, uint y) internal pure returns (uint z) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820d92e3449df2fe31aec1d8b559d592dc55c999a7e8c7086dfa1e009ca57fa682564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610a6f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022557806370a082311461024957806395d89b41146102a1578063a9059cbb14610324578063dd62ed3e1461038a57610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461018157806323b872dd1461019f575b600080fd5b6100a0610402565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061043b565b604051808215151515815260200191505060405180910390f35b610189610452565b6040518082815260200191505060405180910390f35b61020b600480360360608110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610458565b604051808215151515815260200191505060405180910390f35b61022d610623565b604051808260ff1660ff16815260200191505060405180910390f35b61028b6004803603602081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610628565b6040518082815260200191505060405180910390f35b6102a9610640565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e95780820151818401526020810190506102ce565b50505050905090810190601f1680156103165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103706004803603604081101561033a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610679565b604051808215151515815260200191505060405180910390f35b6103ec600480360360408110156103a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610690565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60006104483384846106b5565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461060d5761058c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107a090919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610618848484610823565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b6000610686338484610823565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082828403915081111561081d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b61087581600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107a090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109b790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610a34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820d92e3449df2fe31aec1d8b559d592dc55c999a7e8c7086dfa1e009ca57fa682564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x316 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 CALLER DUP5 DUP5 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x60D JUMPI PUSH2 0x58C DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x618 DUP5 DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x686 CALLER DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x90A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD9 0x2E CALLVALUE 0x49 0xDF 0x2F 0xE3 BYTE 0xEC SAR DUP12 SSTORE SWAP14 MSIZE 0x2D 0xC5 0x5C SWAP10 SWAP11 PUSH31 0x8C7086DFA1E009CA57FA682564736F6C634300051100320000000000000000 ",
							"sourceMap": "155:2039:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:2039:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022557806370a082311461024957806395d89b41146102a1578063a9059cbb14610324578063dd62ed3e1461038a57610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461018157806323b872dd1461019f575b600080fd5b6100a0610402565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061043b565b604051808215151515815260200191505060405180910390f35b610189610452565b6040518082815260200191505060405180910390f35b61020b600480360360608110156101b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610458565b604051808215151515815260200191505060405180910390f35b61022d610623565b604051808260ff1660ff16815260200191505060405180910390f35b61028b6004803603602081101561025f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610628565b6040518082815260200191505060405180910390f35b6102a9610640565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e95780820151818401526020810190506102ce565b50505050905090810190601f1680156103165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103706004803603604081101561033a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610679565b604051808215151515815260200191505060405180910390f35b6103ec600480360360408110156103a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610690565b6040518082815260200191505060405180910390f35b6040518060400160405280600a81526020017f45656c737761702056320000000000000000000000000000000000000000000081525081565b60006104483384846106b5565b6001905092915050565b60005481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461060d5761058c82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107a090919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610618848484610823565b600190509392505050565b601281565b60016020528060005260406000206000915090505481565b6040518060400160405280600681526020017f45454c2d5632000000000000000000000000000000000000000000000000000081525081565b6000610686338484610823565b6001905092915050565b6002602052816000526040600020602052806000526040600020600091509150505481565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082828403915081111561081d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f64732d6d6174682d7375622d756e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b61087581600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107a090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061090a81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109b790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828284019150811015610a34576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f64732d6d6174682d6164642d6f766572666c6f7700000000000000000000000081525060200191505060405180910390fd5b9291505056fea265627a7a72315820d92e3449df2fe31aec1d8b559d592dc55c999a7e8c7086dfa1e009ca57fa682564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x316 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45656C7377617020563200000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x448 CALLER DUP5 DUP5 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x60D JUMPI PUSH2 0x58C DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x618 DUP5 DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x45454C2D56320000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x686 CALLER DUP5 DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D7375622D756E646572666C6F770000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x875 DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7A0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x90A DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD9 0x2E CALLVALUE 0x49 0xDF 0x2F 0xE3 BYTE 0xEC SAR DUP12 SSTORE SWAP14 MSIZE 0x2D 0xC5 0x5C SWAP10 SWAP11 PUSH31 0x8C7086DFA1E009CA57FA682564736F6C634300051100320000000000000000 ",
							"sourceMap": "155:2039:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:2039:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;232:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;232:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1526:147:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;370:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1828:363;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1828:363:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;328:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;402:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;402:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;281:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;281:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1681:139;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1681:139:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;450:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;450:60:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;232:42;;;;;;;;;;;;;;;;;;;:::o;1526:147::-;1590:4;1607:36;1616:10;1628:7;1637:5;1607:8;:36::i;:::-;1661:4;1654:11;;1526:147;;;;:::o;370:23::-;;;;:::o;1828:363::-;1906:4;2025:2;1989:9;:15;1999:4;1989:15;;;;;;;;;;;;;;;:27;2005:10;1989:27;;;;;;;;;;;;;;;;:39;1985:140;;2075:38;2107:5;2075:9;:15;2085:4;2075:15;;;;;;;;;;;;;;;:27;2091:10;2075:27;;;;;;;;;;;;;;;;:31;;:38;;;;:::i;:::-;2045:9;:15;2055:4;2045:15;;;;;;;;;;;;;;;:27;2061:10;2045:27;;;;;;;;;;;;;;;:68;;;;1985:140;2135:26;2145:4;2151:2;2155:5;2135:9;:26::i;:::-;2179:4;2172:11;;1828:363;;;;;:::o;328:35::-;361:2;328:35;:::o;402:41::-;;;;;;;;;;;;;;;;;:::o;281:40::-;;;;;;;;;;;;;;;;;;;:::o;1681:139::-;1741:4;1758:32;1768:10;1780:2;1784:5;1758:9;:32::i;:::-;1808:4;1801:11;;1681:139;;;;:::o;450:60::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1121:169::-;1230:5;1202:9;:16;1212:5;1202:16;;;;;;;;;;;;;;;:25;1219:7;1202:25;;;;;;;;;;;;;;;:33;;;;1267:7;1251:31;;1260:5;1251:31;;;1276:5;1251:31;;;;;;;;;;;;;;;;;;1121:169;;;:::o;296:129:2:-;348:6;390:1;384;380;:5;376:9;;;375:16;;367:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;296:129;;;;:::o;1298:220:0:-;1392:26;1412:5;1392:9;:15;1402:4;1392:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;1374:9;:15;1384:4;1374:15;;;;;;;;;;;;;;;:44;;;;1445:24;1463:5;1445:9;:13;1455:2;1445:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1429:9;:13;1439:2;1429:13;;;;;;;;;;;;;;;:40;;;;1500:2;1485:25;;1494:4;1485:25;;;1504:5;1485:25;;;;;;;;;;;;;;;;;;1298:220;;;:::o;160:128:2:-;212:6;254:1;248;244;:5;240:9;;;239:16;;231:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:128;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "534200",
								"executionCost": "568",
								"totalCost": "534768"
							},
							"external": {
								"allowance(address,address)": "1355",
								"approve(address,uint256)": "22431",
								"balanceOf(address)": "1191",
								"decimals()": "217",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1050",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "MSTORE"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "POP"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "DUP1"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "CODECOPY"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 155,
									"end": 2194,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d92e3449df2fe31aec1d8b559d592dc55c999a7e8c7086dfa1e009ca57fa682564736f6c63430005110032",
									".code": [
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "MSTORE"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "LT"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "SHR"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "GT"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMP"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "EQ"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPI"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "DUP1"
										},
										{
											"begin": 155,
											"end": 2194,
											"name": "REVERT"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ISZERO"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMPI"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP3"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP4"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "EXP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "NOT"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "AND"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP3"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SUB"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "RETURN"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "JUMPDEST"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "AND"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP3"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP3"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "JUMPDEST"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "MLOAD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP3"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ISZERO"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ISZERO"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ISZERO"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ISZERO"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "MSTORE"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "ADD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "MLOAD"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "DUP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SUB"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "RETURN"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "DUP3"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "MSTORE"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "ADD"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "POP"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "MLOAD"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "DUP1"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SWAP2"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SUB"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SWAP1"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "RETURN"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "JUMPDEST"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP3"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP3"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP3"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "JUMPDEST"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "MLOAD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP3"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ISZERO"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ISZERO"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ISZERO"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ISZERO"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "MSTORE"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "ADD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "MLOAD"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "DUP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP2"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SUB"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "RETURN"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "MLOAD"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP1"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP3"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "AND"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "AND"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP2"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "MSTORE"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "ADD"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP2"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "POP"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "POP"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "MLOAD"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP1"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP2"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SUB"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "SWAP1"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "RETURN"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "AND"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP3"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP3"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "ADD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "MLOAD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SUB"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "RETURN"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP3"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP3"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP4"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP4"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ISZERO"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMPI"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP3"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP4"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "EXP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "NOT"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP3"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SUB"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "RETURN"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "JUMPDEST"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ADD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "AND"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ADD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP3"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ADD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP3"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "JUMPDEST"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "MLOAD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP3"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ISZERO"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ISZERO"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ISZERO"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ISZERO"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "MSTORE"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "ADD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "MLOAD"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SUB"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "RETURN"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "JUMPDEST"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "ADD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "AND"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "ADD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP3"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "AND"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "ADD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP3"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "JUMPDEST"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MLOAD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP3"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MSTORE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "ADD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MLOAD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SUB"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "RETURN"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMPDEST"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MLOAD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "ADD"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "PUSH",
											"value": "45656C7377617020563200000000000000000000000000000000000000000000"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "MSTORE"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "DUP2"
										},
										{
											"begin": 232,
											"end": 274,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "JUMPDEST"
										},
										{
											"begin": 1590,
											"end": 1594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1616,
											"end": 1626,
											"name": "CALLER"
										},
										{
											"begin": 1628,
											"end": 1635,
											"name": "DUP5"
										},
										{
											"begin": 1637,
											"end": 1642,
											"name": "DUP5"
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "JUMPDEST"
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1654,
											"end": 1665,
											"name": "SWAP1"
										},
										{
											"begin": 1654,
											"end": 1665,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP3"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "SWAP2"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1526,
											"end": 1673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "SLOAD"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "DUP2"
										},
										{
											"begin": 370,
											"end": 393,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "JUMPDEST"
										},
										{
											"begin": 1906,
											"end": 1910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 1998,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2003,
											"name": "DUP7"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "SWAP1"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2004,
											"name": "KECCAK256"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2015,
											"name": "CALLER"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SWAP1"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "KECCAK256"
										},
										{
											"begin": 1989,
											"end": 2016,
											"name": "SLOAD"
										},
										{
											"begin": 1989,
											"end": 2028,
											"name": "EQ"
										},
										{
											"begin": 1985,
											"end": 2125,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1985,
											"end": 2125,
											"name": "JUMPI"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2107,
											"end": 2112,
											"name": "DUP3"
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "DUP8"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "ADD"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "ADD"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "KECCAK256"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2101,
											"name": "CALLER"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "DUP2"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "MSTORE"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "KECCAK256"
										},
										{
											"begin": 2075,
											"end": 2102,
											"name": "SLOAD"
										},
										{
											"begin": 2075,
											"end": 2106,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 2075,
											"end": 2106,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "SWAP2"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "SWAP1"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "AND"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2075,
											"end": 2113,
											"name": "JUMPDEST"
										},
										{
											"begin": 2045,
											"end": 2054,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "DUP7"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "AND"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "AND"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "SWAP1"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "KECCAK256"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "CALLER"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "AND"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "AND"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "ADD"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "SWAP1"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "DUP2"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "MSTORE"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "ADD"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2072,
											"name": "KECCAK256"
										},
										{
											"begin": 2045,
											"end": 2113,
											"name": "DUP2"
										},
										{
											"begin": 2045,
											"end": 2113,
											"name": "SWAP1"
										},
										{
											"begin": 2045,
											"end": 2113,
											"name": "SSTORE"
										},
										{
											"begin": 2045,
											"end": 2113,
											"name": "POP"
										},
										{
											"begin": 1985,
											"end": 2125,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1985,
											"end": 2125,
											"name": "JUMPDEST"
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2145,
											"end": 2149,
											"name": "DUP5"
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "DUP5"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP5"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "JUMPDEST"
										},
										{
											"begin": 2179,
											"end": 2183,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2172,
											"end": 2183,
											"name": "SWAP1"
										},
										{
											"begin": 2172,
											"end": 2183,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP4"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "SWAP3"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "POP"
										},
										{
											"begin": 1828,
											"end": 2191,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMPDEST"
										},
										{
											"begin": 361,
											"end": 363,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "DUP2"
										},
										{
											"begin": 328,
											"end": 363,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "JUMPDEST"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "MSTORE"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "KECCAK256"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "SLOAD"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "DUP2"
										},
										{
											"begin": 402,
											"end": 443,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "PUSH",
											"value": "45454C2D56320000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "JUMPDEST"
										},
										{
											"begin": 1741,
											"end": 1745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1790,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "CALLER"
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "DUP5"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP5"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1758,
											"end": 1790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1790,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1758,
											"end": 1790,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "SWAP1"
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP3"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "POP"
										},
										{
											"begin": 1681,
											"end": 1820,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "JUMPDEST"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MSTORE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MSTORE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "KECCAK256"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MSTORE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP1"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "MSTORE"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "KECCAK256"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SWAP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "SLOAD"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "DUP2"
										},
										{
											"begin": 450,
											"end": 510,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1202,
											"end": 1211,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP6"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1218,
											"name": "KECCAK256"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP5"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1227,
											"name": "KECCAK256"
										},
										{
											"begin": 1202,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1235,
											"name": "SSTORE"
										},
										{
											"begin": 1202,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP2"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "AND"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP4"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "AND"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1276,
											"end": 1281,
											"name": "DUP4"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "MLOAD"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "DUP3"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "DUP2"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "MSTORE"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "ADD"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "MLOAD"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP2"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SUB"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "SWAP1"
										},
										{
											"begin": 1251,
											"end": 1282,
											"name": "LOG3"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "POP"
										},
										{
											"begin": 1121,
											"end": 1290,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP3"
										},
										{
											"begin": 384,
											"end": 385,
											"name": "DUP3"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP5"
										},
										{
											"begin": 380,
											"end": 385,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "SWAP2"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 385,
											"name": "DUP2"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "GT"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "ISZERO"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPI"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP3"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F770000000000000000000000"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MSTORE"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "ADD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "POP"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "MLOAD"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "DUP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP2"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SUB"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "SWAP1"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "REVERT"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 367,
											"end": 417,
											"name": "JUMPDEST"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP3"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "SWAP2"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "POP"
										},
										{
											"begin": 296,
											"end": 425,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1412,
											"end": 1417,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "DUP7"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "MSTORE"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "KECCAK256"
										},
										{
											"begin": 1392,
											"end": 1407,
											"name": "SLOAD"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP2"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1392,
											"end": 1418,
											"name": "JUMPDEST"
										},
										{
											"begin": 1374,
											"end": 1383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1388,
											"name": "DUP6"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "AND"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "AND"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "DUP2"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "MSTORE"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "ADD"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "DUP2"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "MSTORE"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "ADD"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1389,
											"name": "KECCAK256"
										},
										{
											"begin": 1374,
											"end": 1418,
											"name": "DUP2"
										},
										{
											"begin": 1374,
											"end": 1418,
											"name": "SWAP1"
										},
										{
											"begin": 1374,
											"end": 1418,
											"name": "SSTORE"
										},
										{
											"begin": 1374,
											"end": 1418,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1445,
											"end": 1454,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "DUP6"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "AND"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "AND"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "DUP2"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "MSTORE"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "SWAP1"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "DUP2"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "MSTORE"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "ADD"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "KECCAK256"
										},
										{
											"begin": 1445,
											"end": 1458,
											"name": "SLOAD"
										},
										{
											"begin": 1445,
											"end": 1462,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1445,
											"end": 1462,
											"name": "SWAP1"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP2"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "SWAP1"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "AND"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMPDEST"
										},
										{
											"begin": 1429,
											"end": 1438,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "DUP5"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "AND"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "AND"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "SWAP1"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "KECCAK256"
										},
										{
											"begin": 1429,
											"end": 1469,
											"name": "DUP2"
										},
										{
											"begin": 1429,
											"end": 1469,
											"name": "SWAP1"
										},
										{
											"begin": 1429,
											"end": 1469,
											"name": "SSTORE"
										},
										{
											"begin": 1429,
											"end": 1469,
											"name": "POP"
										},
										{
											"begin": 1500,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "AND"
										},
										{
											"begin": 1494,
											"end": 1498,
											"name": "DUP4"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "AND"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "DUP4"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "DUP1"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "DUP3"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "DUP2"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "MSTORE"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "ADD"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "MLOAD"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "DUP1"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SUB"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP1"
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "LOG3"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1298,
											"end": 1518,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMPDEST"
										},
										{
											"begin": 212,
											"end": 218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "DUP3"
										},
										{
											"begin": 244,
											"end": 245,
											"name": "DUP5"
										},
										{
											"begin": 244,
											"end": 249,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 249,
											"name": "DUP2"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "LT"
										},
										{
											"begin": 239,
											"end": 255,
											"name": "ISZERO"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPI"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP3"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77000000000000000000000000"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MSTORE"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "ADD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "POP"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "MLOAD"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "DUP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP2"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SUB"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "SWAP1"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "REVERT"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 231,
											"end": 280,
											"name": "JUMPDEST"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP3"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "SWAP2"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "POP"
										},
										{
											"begin": 160,
											"end": 288,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/EelswapERC20.sol\":\"EelswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EelswapERC20.sol\":{\"keccak256\":\"0x59ea9db4d6a0bb569183b247702299158eed1395d5d5fa38310ec27d4f0f65f5\",\"urls\":[\"bzz-raw://30dcfa202eb56eea029a6cfc423077f08e9d4ce3e05434d97028f84ea73d57e3\",\"dweb:/ipfs/QmUfvpaUiyG5MhANrT7attQZXF8K1RoDZyJWiAacHobQoC\"]},\"contracts/interfaces/IEelswapERC20.sol\":{\"keccak256\":\"0x95387e562a1c1863897083880bbbd0e1c630080a02d68b57db04f6147742eaba\",\"urls\":[\"bzz-raw://cede65aabca1eb44990729d9c6af3922d89d998dbfae7c2873aca1151a1a5c5b\",\"dweb:/ipfs/QmPi4Kop1Y2usNBhLKr4BfiJZV8fmDJvghKyvtmJuagKKQ\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf5ff2ba290aa95920f62a050091d4b73eca8fc1fce353a78d47e7074ca104848\",\"urls\":[\"bzz-raw://30561471fa5bea2d80bbd81b13f4a91769ef370ad49580e2bf5515b8a89e80ea\",\"dweb:/ipfs/QmT69PNHRHJAN5JwBPQoZkAByAy3Nq6chEwHV8cDxthUFD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/EelswapERC20.sol:EelswapERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"IEelswapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IEelswapERC20.sol\":\"IEelswapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IEelswapERC20.sol\":{\"keccak256\":\"0x95387e562a1c1863897083880bbbd0e1c630080a02d68b57db04f6147742eaba\",\"urls\":[\"bzz-raw://cede65aabca1eb44990729d9c6af3922d89d998dbfae7c2873aca1151a1a5c5b\",\"dweb:/ipfs/QmPi4Kop1Y2usNBhLKr4BfiJZV8fmDJvghKyvtmJuagKKQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":136:578  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":136:578  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582088152cf1ba2846f68afd413e59cdfd91e25188e6eb8f80cf25e96345ace38eb664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582088152cf1ba2846f68afd413e59cdfd91e25188e6eb8f80cf25e96345ace38eb664736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP9 ISZERO 0x2C CALL 0xBA 0x28 CHAINID 0xF6 DUP11 REVERT COINBASE RETURNDATACOPY MSIZE 0xCD REVERT SWAP2 0xE2 MLOAD DUP9 0xE6 0xEB DUP16 DUP1 0xCF 0x25 0xE9 PUSH4 0x45ACE38E 0xB6 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "136:442:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582088152cf1ba2846f68afd413e59cdfd91e25188e6eb8f80cf25e96345ace38eb664736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP9 ISZERO 0x2C CALL 0xBA 0x28 CHAINID 0xF6 DUP11 REVERT COINBASE RETURNDATACOPY MSIZE 0xCD REVERT SWAP2 0xE2 MLOAD DUP9 0xE6 0xEB DUP16 DUP1 0xCF 0x25 0xE9 PUSH4 0x45ACE38E 0xB6 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "136:442:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 136,
									"end": 578,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 136,
									"end": 578,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582088152cf1ba2846f68afd413e59cdfd91e25188e6eb8f80cf25e96345ace38eb664736f6c63430005110032",
									".code": [
										{
											"begin": 136,
											"end": 578,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "ADDRESS"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "EQ"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "MSTORE"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "DUP1"
										},
										{
											"begin": 136,
											"end": 578,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf5ff2ba290aa95920f62a050091d4b73eca8fc1fce353a78d47e7074ca104848\",\"urls\":[\"bzz-raw://30561471fa5bea2d80bbd81b13f4a91769ef370ad49580e2bf5515b8a89e80ea\",\"dweb:/ipfs/QmT69PNHRHJAN5JwBPQoZkAByAy3Nq6chEwHV8cDxthUFD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/EelswapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/EelswapERC20.sol",
					"exportedSymbols": {
						"EelswapERC20": [
							250
						]
					},
					"id": 251,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "contracts/interfaces/IEelswapERC20.sol",
							"file": "./interfaces/IEelswapERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 335,
							"src": "75:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 410,
							"src": "117:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "IEelswapERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 334,
										"src": "180:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEelswapERC20_$334",
											"typeString": "contract IEelswapERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "180:13:0"
								}
							],
							"contractDependencies": [
								334
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250,
								334
							],
							"name": "EelswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 409,
										"src": "206:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$409",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "200:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "219:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "232:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "232:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "45656c73776170205632",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "262:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cc7663cb79c4c2471f08ab33bcb482270aba9268f35513074a249ce070f952b9",
											"typeString": "literal_string \"Eelswap V2\""
										},
										"value": "Eelswap V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "281:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "45454c2d5632",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "313:8:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_077f46f1268ccd289e7279c4fa37dc2a3caacd2560200f1a7ec776901ba8b108",
											"typeString": "literal_string \"EEL-V2\""
										},
										"value": "EEL-V2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "328:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "328:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "361:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "370:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "370:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "402:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "410:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "402:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "421:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "450:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "458:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "450:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "469:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "488:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "731:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "742:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 39,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "772:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 37,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "756:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "756:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "756:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "742:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "742:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 43,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "789:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 45,
														"indexExpression": {
															"argumentTypes": null,
															"id": 44,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "799:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "789:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 50,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 46,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "805:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 48,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 47,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "815:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "805:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "805:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "805:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "789:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "789:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "862:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "854:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "854:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 58,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "866:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 59,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "870:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 54,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "845:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "EmitStatement",
												"src": "840:36:0"
											}
										]
									},
									"documentation": null,
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "698:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "710:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "697:24:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:0"
									},
									"scope": 250,
									"src": "683:201:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "942:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 70,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "953:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 72,
														"indexExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "963:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "953:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 77,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "991:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "971:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 75,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 74,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "981:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "971:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 380,
															"src": "971:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "971:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "953:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "953:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1008:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 84,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1038:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 82,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1022:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 380,
															"src": "1022:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1022:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1008:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1008:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 90,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1077:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1069:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1092:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1084:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1084:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 95,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1096:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 88,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1060:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "EmitStatement",
												"src": "1055:47:0"
											}
										]
									},
									"documentation": null,
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "907:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "921:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "906:26:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "942:0:0"
									},
									"scope": 250,
									"src": "892:218:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1191:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1202:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 111,
															"indexExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1212:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1202:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 112,
														"indexExpression": {
															"argumentTypes": null,
															"id": 110,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1202:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 113,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1230:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1202:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1202:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1260:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 118,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1267:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 119,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1276:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 116,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "1251:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "1246:36:0"
											}
										]
									},
									"documentation": null,
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1139:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1171:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1138:44:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:0"
									},
									"scope": 250,
									"src": "1121:169:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1363:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 132,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1374:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 134,
														"indexExpression": {
															"argumentTypes": null,
															"id": 133,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1374:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 139,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1412:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1392:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 137,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 136,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "1402:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1392:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 380,
															"src": "1392:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1392:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1374:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "1374:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1429:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 145,
														"indexExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1429:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 150,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1463:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1445:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 148,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 147,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1455:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1445:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 358,
															"src": "1445:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1445:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1429:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1429:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 155,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1494:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1500:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 157,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "1504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 154,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "EmitStatement",
												"src": "1480:30:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1317:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1331:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1343:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1316:38:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:0:0"
									},
									"scope": 250,
									"src": "1298:220:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "1596:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 171,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1616:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1616:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 173,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "1628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 174,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "1637:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1607:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1607:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1607:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1661:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 169,
												"id": 178,
												"nodeType": "Return",
												"src": "1654:11:0"
											}
										]
									},
									"documentation": null,
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1560:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1560:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1542:29:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "1590:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1589:6:0"
									},
									"scope": 250,
									"src": "1526:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 313,
									"visibility": "external"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1747:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1768:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1768:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "1780:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 193,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "1784:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 189,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1758:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1758:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1758:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1808:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 188,
												"id": 197,
												"nodeType": "Return",
												"src": "1801:11:0"
											}
										]
									},
									"documentation": null,
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1711:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:24:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1740:6:0"
									},
									"scope": 250,
									"src": "1681:139:0",
									"stateMutability": "nonpayable",
									"superFunction": 322,
									"visibility": "external"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "1912:279:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1989:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 212,
															"indexExpression": {
																"argumentTypes": null,
																"id": 211,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "1999:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1989:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 215,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "2005:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2005:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1989:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "2025:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2026:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2020:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2020:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1989:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 239,
												"nodeType": "IfStatement",
												"src": "1985:140:0",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "2030:95:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 221,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "2045:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 225,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 222,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "2055:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2045:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 226,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 223,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "2061:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2061:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2045:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 234,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "2107:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "2075:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 229,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 228,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "2085:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2075:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 232,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 230,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "2091:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2091:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2075:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 380,
																		"src": "2075:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2075:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2045:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 237,
															"nodeType": "ExpressionStatement",
															"src": "2045:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 241,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "2145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 242,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 243,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2155:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 240,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "2135:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "2135:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2179:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 209,
												"id": 247,
												"nodeType": "Return",
												"src": "2172:11:0"
											}
										]
									},
									"documentation": null,
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1864:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1876:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1849:38:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "1906:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1905:6:0"
									},
									"scope": 250,
									"src": "1828:363:0",
									"stateMutability": "nonpayable",
									"superFunction": 333,
									"visibility": "external"
								}
							],
							"scope": 251,
							"src": "155:2039:0"
						}
					],
					"src": "33:2161:0"
				},
				"id": 0
			},
			"contracts/interfaces/IEelswapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IEelswapERC20.sol",
					"exportedSymbols": {
						"IEelswapERC20": [
							334
						]
					},
					"id": 335,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 334,
							"linearizedBaseContracts": [
								334
							],
							"name": "IEelswapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 260,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "107:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "130:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "155:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "155:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "106:60:1"
									},
									"src": "92:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 268,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "188:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "188:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "210:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "230:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "230:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "187:54:1"
									},
									"src": "173:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "289:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 270,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "289:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:15:1"
									},
									"scope": 334,
									"src": "250:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "350:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 275,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "350:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "349:15:1"
									},
									"scope": 334,
									"src": "310:55:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "414:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 280,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "414:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "413:7:1"
									},
									"scope": 334,
									"src": "371:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "473:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:6:1"
									},
									"scope": 334,
									"src": "427:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "504:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "503:15:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "542:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "542:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "541:6:1"
									},
									"scope": 334,
									"src": "485:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "573:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "588:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:32:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "628:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "628:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "627:6:1"
									},
									"scope": 334,
									"src": "554:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "659:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "676:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "676:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "658:29:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "706:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "706:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:6:1"
									},
									"scope": 334,
									"src": "642:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "736:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "748:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "735:24:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 334,
									"src": "718:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "812:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "826:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "838:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "811:38:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:6:1"
									},
									"scope": 334,
									"src": "790:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 335,
							"src": "61:818:1"
						}
					],
					"src": "33:846:1"
				},
				"id": 1
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							409
						]
					},
					"id": 410,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 336,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "220:68:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 346,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "240:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 347,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "244:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 348,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 340,
																				"src": "248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "244:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "240:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "239:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 352,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "254:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "239:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "257:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															427,
															428
														],
														"referencedDeclaration": 428,
														"src": "231:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "231:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "231:49:2"
											}
										]
									},
									"documentation": null,
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "173:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "181:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "181:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "172:16:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "212:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "212:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "211:8:2"
									},
									"scope": 409,
									"src": "160:128:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "356:69:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 368,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "376:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 369,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 360,
																				"src": "380:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 370,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 362,
																				"src": "384:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "380:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "376:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "375:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 374,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "390:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "375:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "393:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															427,
															428
														],
														"referencedDeclaration": 428,
														"src": "367:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "367:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "367:50:2"
											}
										]
									},
									"documentation": null,
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "309:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "317:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "317:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "308:16:2"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "348:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "347:8:2"
									},
									"scope": 409,
									"src": "296:129:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "493:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 390,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "512:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "517:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "512:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 393,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 387,
																					"src": "523:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 394,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 382,
																						"src": "527:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 395,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 384,
																						"src": "531:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "527:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "523:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 398,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "522:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 399,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "536:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "522:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "541:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "522:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "512:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "544:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															427,
															428
														],
														"referencedDeclaration": 428,
														"src": "504:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "504:63:2"
											}
										]
									},
									"documentation": null,
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "446:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "454:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "454:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:16:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "485:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:8:2"
									},
									"scope": 409,
									"src": "433:142:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "136:442:2"
						}
					],
					"src": "0:578:2"
				},
				"id": 2
			}
		}
	}
}